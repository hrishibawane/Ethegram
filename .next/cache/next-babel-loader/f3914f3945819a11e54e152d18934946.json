{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, List, Container } from \"semantic-ui-react\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport COLORS from \"../../colors\";\nimport { CustButton } from \"../../components/styledComponents\";\n\nclass ChatRoom extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      caption: \"\",\n      prevMsgs: \"\",\n      messages: [],\n      currmsg: \"\",\n      currAcc: \"\",\n      username: \"\",\n      items: [],\n      loading: false\n    });\n\n    _defineProperty(this, \"renderMsgs\", () => {\n      const items = this.state.messages.map((msg, index) => {\n        let str = msg.split(\" *** \");\n\n        if (index > 0) {\n          str[0] = str[0].slice(1, str[0].length);\n        }\n\n        if (str[0] == this.state.username) {\n          return __jsx(List.Item, {\n            key: index,\n            style: {\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding: \"10px\",\n              backgroundColor: COLORS.white,\n              borderRadius: \"5px\",\n              margin: \"10px\"\n            }\n          }, __jsx(List.Content, null, __jsx(List.Header, null, str[0]), __jsx(List.Description, null, __jsx(\"div\", null, __jsx(\"p\", {\n            style: {\n              margin: \"0px\"\n            }\n          }, str[1]), __jsx(\"hr\", null), __jsx(\"p\", {\n            style: {\n              margin: \"0px\",\n              color: \"grey\",\n              fontSize: \"12px\"\n            }\n          }, str[2])))));\n        } else {\n          return __jsx(List.Item, {\n            key: index,\n            style: {\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              margin: \"10px\"\n            }\n          }, __jsx(List.Content, null, __jsx(List.Header, null, str[0]), __jsx(List.Description, null, str[1])));\n        }\n      });\n      return items;\n    });\n\n    _defineProperty(this, \"onSend\", async () => {\n      this.setState({\n        loading: true\n      });\n      let prevMsgs = this.state.prevMsgs;\n      const date = new Date();\n      date.setHours(date.getHours() + 5);\n      date.setMinutes(date.getMinutes() + 30);\n      const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n\n      if (prevMsgs.length > 0) {\n        prevMsgs += \" /// \" + this.state.username + \" *** \" + this.state.currmsg + \" *** \" + timestamp;\n      } else {\n        prevMsgs += this.state.username + \" *** \" + this.state.currmsg + \" *** \" + timestamp;\n      }\n\n      this.setState({\n        prevMsgs: prevMsgs,\n        currmsg: \"\"\n      }); // let uint8Arr = new TextEncoder(\"utf-8\").encode(prevMsgs);\n\n      let uint8Arr = await Buffer.from(prevMsgs);\n      console.log(uint8Arr);\n      const ipfshash = await ipfs.add(uint8Arr);\n      console.log(ipfshash);\n      await social.methods.setChatHash(ipfshash[0].hash).send({\n        from: this.state.currAcc\n      });\n      this.componentDidMount();\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const username = await social.methods.getUserDetails(accs[0]).call();\n    this.setState({\n      currAcc: accs[0],\n      username: username[0]\n    });\n    const hash = await social.methods.chatHash().call();\n\n    if (hash.length > 0) {\n      let data = await ipfs.files.get(hash);\n      console.log(data[0].content);\n      let msgString = new TextDecoder(\"utf-8\").decode(data[0].content);\n      console.log(msgString);\n      this.setState({\n        messages: msgString.split(\"///\"),\n        prevMsgs: msgString\n      });\n    }\n\n    const items = this.renderMsgs();\n    this.setState({\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Container, null, __jsx(\"h3\", null, \"Chat Room\"), __jsx(\"hr\", null), __jsx(List, {\n      items: this.state.items\n    }), __jsx(Form, {\n      onSubmit: () => this.onSend()\n    }, __jsx(Form.Input, {\n      fluid: true,\n      placeholder: \"Write your message...\",\n      value: this.state.currmsg,\n      onChange: event => this.setState({\n        currmsg: event.target.value\n      })\n    }), __jsx(CustButton, {\n      icon: \"send\",\n      style: {\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText\n      },\n      content: \"Send\",\n      loading: this.state.loading\n    }))));\n  }\n\n}\n\nexport default ChatRoom;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/chat/index.js"],"names":["React","Component","Layout","Form","Button","List","Container","ipfs","social","web3","Router","COLORS","CustButton","ChatRoom","caption","prevMsgs","messages","currmsg","currAcc","username","items","loading","state","map","msg","index","str","split","slice","length","width","border","padding","backgroundColor","white","borderRadius","margin","color","fontSize","setState","date","Date","setHours","getHours","setMinutes","getMinutes","timestamp","toUTCString","replace","uint8Arr","Buffer","from","console","log","ipfshash","add","methods","setChatHash","hash","send","componentDidMount","accs","eth","getAccounts","getUserDetails","call","chatHash","data","files","get","content","msgString","TextDecoder","decode","renderMsgs","render","onSend","event","target","value","menuBackground","menuText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, List, Container } from \"semantic-ui-react\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport COLORS from \"../../colors\";\nimport { CustButton } from \"../../components/styledComponents\";\n\nclass ChatRoom extends Component {\n  state = {\n    caption: \"\",\n    prevMsgs: \"\",\n    messages: [],\n    currmsg: \"\",\n    currAcc: \"\",\n    username: \"\",\n    items: [],\n    loading: false,\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const username = await social.methods.getUserDetails(accs[0]).call();\n    this.setState({ currAcc: accs[0], username: username[0] });\n\n    const hash = await social.methods.chatHash().call();\n    if (hash.length > 0) {\n      let data = await ipfs.files.get(hash);\n      console.log(data[0].content);\n      let msgString = new TextDecoder(\"utf-8\").decode(data[0].content);\n      console.log(msgString);\n      this.setState({ messages: msgString.split(\"///\"), prevMsgs: msgString });\n    }\n    const items = this.renderMsgs();\n    this.setState({ items: items });\n  }\n\n  renderMsgs = () => {\n    const items = this.state.messages.map((msg, index) => {\n      let str = msg.split(\" *** \");\n      if (index > 0) {\n        str[0] = str[0].slice(1, str[0].length);\n      }\n      if (str[0] == this.state.username) {\n        return (\n          <List.Item\n            key={index}\n            style={{\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding: \"10px\",\n              backgroundColor: COLORS.white,\n              borderRadius: \"5px\",\n              margin: \"10px\",\n            }}\n          >\n            <List.Content>\n              <List.Header>{str[0]}</List.Header>\n              <List.Description>\n                <div>\n                  <p style={{margin:\"0px\"}}>{str[1]}</p>\n                  <hr />\n                  <p style={{margin:\"0px\", color:\"grey\", fontSize:\"12px\"}}>{str[2]}</p>\n                </div>\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        );\n      } else {\n        return (\n          <List.Item\n            key={index}\n            style={{\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              margin: \"10px\",\n            }}\n          >\n            <List.Content>\n              <List.Header>{str[0]}</List.Header>\n              <List.Description>{str[1]}</List.Description>\n            </List.Content>\n          </List.Item>\n        );\n      }\n    });\n    return items;\n  };\n\n  onSend = async () => {\n    this.setState({ loading: true });\n    let prevMsgs = this.state.prevMsgs;\n    const date = new Date();\n    date.setHours(date.getHours() + 5);\n    date.setMinutes(date.getMinutes() + 30);\n    const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n    if (prevMsgs.length > 0) {\n      prevMsgs += \" /// \" + this.state.username + \" *** \" + this.state.currmsg + \" *** \" + timestamp;\n    } else {\n      prevMsgs += this.state.username + \" *** \" + this.state.currmsg + \" *** \" + timestamp;\n    }\n    this.setState({ prevMsgs: prevMsgs, currmsg: \"\" });\n\n    // let uint8Arr = new TextEncoder(\"utf-8\").encode(prevMsgs);\n    let uint8Arr = await Buffer.from(prevMsgs);\n    console.log(uint8Arr);\n    const ipfshash = await ipfs.add(uint8Arr);\n    console.log(ipfshash);\n    await social.methods.setChatHash(ipfshash[0].hash).send({\n      from: this.state.currAcc,\n    });\n\n    this.componentDidMount();\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <h3>Chat Room</h3>\n          <hr></hr>\n          <List items={this.state.items}></List>\n          <Form onSubmit={() => this.onSend()}>\n            <Form.Input\n              fluid\n              placeholder=\"Write your message...\"\n              value={this.state.currmsg}\n              onChange={(event) =>\n                this.setState({ currmsg: event.target.value })\n              }\n            />\n            <CustButton\n              icon=\"send\"\n              style={{\n                backgroundColor: COLORS.menuBackground,\n                color: COLORS.menuText,\n              }}\n              content=\"Send\"\n              loading={this.state.loading}\n            />\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}