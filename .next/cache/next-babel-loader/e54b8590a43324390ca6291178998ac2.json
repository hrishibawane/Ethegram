{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/users/view/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport social from \"../../../ethereum/social\";\nimport { Container, Grid, Card, Form, Input, Button, Modal, Header, List } from \"semantic-ui-react\";\nimport COLORS from \"../../../colors\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\n\nclass ViewUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      userAddress: \"\",\n      userName: \"\",\n      tokens: 0,\n      userPosts: 0,\n      redeemTokens: 0,\n      items: [],\n      posts: [],\n      postCount: 0\n    });\n\n    _defineProperty(this, \"renderPosts\", async () => {\n      const posts = this.state.posts;\n      console.log(this.state.postCount); // const items = await Promise.all(\n      //   posts.map(async (post, index) => {\n      //     if (!post.valid || post.owner != this.state.userAddress) {\n      //       return {\n      //         key: index,\n      //       };\n      //     }\n      //     const name = this.state.userName;\n      //     let imgSrc = null, vidSrc = null;\n      //     if (post.imgIpfsHash.length > 0) {\n      //       let hash = post.imgIpfsHash;\n      //       let type = hash[0];\n      //       hash = hash.slice(1, hash.length);\n      //       if (type == \"0\") {\n      //         imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n      //       } else {\n      //         vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n      //       }\n      //     }\n      //     console.log(post.imgIpfsHash);\n      //     return {\n      //       key: index,\n      //       header: (\n      //         <div>\n      //           <h4 style={{ marginBottom: \"0px\" }}>{name}</h4>\n      //           <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n      //             {post.timestamp}\n      //           </p>\n      //           <h3>{post.caption}</h3>\n      //         </div>\n      //       ),\n      //       description: (\n      //         <div style={{ border: \"2px solid grey\" }}>\n      //           <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n      //             {post.description}\n      //           </p>\n      //           <Image\n      //             style={{ padding: \"20px\" }}\n      //             hidden={imgSrc == null}\n      //             src={imgSrc}\n      //             fluid\n      //           />\n      //           <ReactPlayer\n      //             style={{ padding: \"20px\", minHeight: \"100%\" }}\n      //             hidden={vidSrc == null}\n      //             url={vidSrc}\n      //             controls={true}\n      //             light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n      //             width=\"100%\"\n      //             height=\"100%\"\n      //           />\n      //         </div>\n      //       ),\n      //       extra: (\n      //         <div>\n      //           <Form onSubmit={() => this.onSubmit(index)}>\n      //             <Form.Field inline>\n      //               <Input\n      //                 required\n      //                 focus\n      //                 placeholder=\"Add a comment...\"\n      //                 value={this.state.caption}\n      //                 onChange={(event) =>\n      //                   this.setState({ newComment: event.target.value })\n      //                 }\n      //                 style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n      //               />\n      //               <Button\n      //                 size=\"small\"\n      //                 color=\"linkedin\"\n      //                 content=\"Post Comment\"\n      //                 icon=\"edit\"\n      //                 style={{ height: \"40px\" }}\n      //               />\n      //             </Form.Field>\n      //           </Form>\n      //           <br></br>\n      //           <Button\n      //             onClick={() => this.likePost(index)}\n      //             color=\"red\"\n      //             content=\"Like\"\n      //             icon=\"heart\"\n      //             size=\"medium\"\n      //             label={{ basic: true, color: \"red\", content: post.likes }}\n      //           />\n      //           <Modal\n      //             trigger={\n      //               <Button\n      //                 size=\"medium\"\n      //                 color=\"facebook\"\n      //                 content=\"View Comments\"\n      //                 icon=\"comments\"\n      //                 onClick={() => this.setState({ modal: true })}\n      //               />\n      //             }\n      //             size=\"small\"\n      //           >\n      //             <Header content=\"Comments\" />\n      //             <Modal.Content>\n      //               <List divided items={post.comments.split(\"/\")}></List>\n      //             </Modal.Content>\n      //             <Modal.Actions>\n      //               <Button\n      //                 color=\"red\"\n      //                 content=\"Close\"\n      //                 icon=\"close\"\n      //                 inverted\n      //                 onClick={() => this.setState({ modal: false })}\n      //               />\n      //             </Modal.Actions>\n      //           </Modal>\n      //         </div>\n      //       ),\n      //       fluid: true,\n      //     };\n      //   })\n      // );\n      // this.setState({ items: items });\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      userAddress: props.query.address\n    };\n  }\n\n  async componentDidMount() {\n    const userAddress = this.props.userAddress;\n    const userDetails = await social.methods.getUserDetails(userAddress).call();\n    console.log(userDetails);\n    this.setState({\n      userName: userDetails[0],\n      tokens: userDetails[1],\n      userPosts: userDetails[2],\n      redeemTokens: userDetails[3],\n      userAddress: userAddress\n    });\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(Array(parseInt(postCount)).fill().map((element, index) => {\n      return social.methods.posts(index).call();\n    }));\n    console.log(posts);\n    this.setState({\n      posts: posts,\n      postCount: postCount\n    });\n    this.renderPosts();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.userName), __jsx(\"div\", {\n      style: {\n        backgroundColor: COLORS.divBackground,\n        padding: \"10px\",\n        width: \"500px\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontWeight: \"bold\",\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.userAddress))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), __jsx(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Total Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.userPosts,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })))), __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Total Tokens Earned\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.tokens,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"GTok\"))))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Your Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), __jsx(Card.Group, {\n      centered: true,\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ViewUser;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/users/view/index.js"],"names":["React","Component","Layout","social","Container","Grid","Card","Form","Input","Button","Modal","Header","List","COLORS","CountUp","ReactPlayer","ViewUser","userAddress","userName","tokens","userPosts","redeemTokens","items","posts","postCount","state","console","log","getInitialProps","props","query","address","componentDidMount","userDetails","methods","getUserDetails","call","setState","getPostsCount","Promise","all","Array","parseInt","fill","map","element","index","renderPosts","render","color","menuBackground","fontSize","backgroundColor","divBackground","padding","width","borderRadius","border","borderColor","fontWeight","height","menuText","alignContent","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport social from \"../../../ethereum/social\";\nimport {\n  Container,\n  Grid,\n  Card,\n  Form,\n  Input,\n  Button,\n  Modal,\n  Header,\n  List\n} from \"semantic-ui-react\";\nimport COLORS from \"../../../colors\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\n\nclass ViewUser extends Component {\n  state = {\n    userAddress: \"\",\n    userName: \"\",\n    tokens: 0,\n    userPosts: 0,\n    redeemTokens: 0,\n    items: [],\n    posts: [],\n    postCount: 0,\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userAddress: props.query.address,\n    };\n  }\n\n  async componentDidMount() {\n    const userAddress = this.props.userAddress;\n\n    const userDetails = await social.methods.getUserDetails(userAddress).call();\n    console.log(userDetails);\n\n    this.setState({\n      userName: userDetails[0],\n      tokens: userDetails[1],\n      userPosts: userDetails[2],\n      redeemTokens: userDetails[3],\n      userAddress: userAddress,\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n    console.log(posts);\n    this.setState({ posts: posts, postCount: postCount });\n    this.renderPosts();\n  }\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    // const items = await Promise.all(\n    //   posts.map(async (post, index) => {\n    //     if (!post.valid || post.owner != this.state.userAddress) {\n    //       return {\n    //         key: index,\n    //       };\n    //     }\n    //     const name = this.state.userName;\n    //     let imgSrc = null, vidSrc = null;\n    //     if (post.imgIpfsHash.length > 0) {\n    //       let hash = post.imgIpfsHash;\n    //       let type = hash[0];\n    //       hash = hash.slice(1, hash.length);\n\n    //       if (type == \"0\") {\n    //         imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n    //       } else {\n    //         vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n    //       }\n    //     }\n\n    //     console.log(post.imgIpfsHash);\n\n    //     return {\n    //       key: index,\n    //       header: (\n    //         <div>\n    //           <h4 style={{ marginBottom: \"0px\" }}>{name}</h4>\n    //           <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n    //             {post.timestamp}\n    //           </p>\n    //           <h3>{post.caption}</h3>\n    //         </div>\n    //       ),\n    //       description: (\n    //         <div style={{ border: \"2px solid grey\" }}>\n    //           <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n    //             {post.description}\n    //           </p>\n    //           <Image\n    //             style={{ padding: \"20px\" }}\n    //             hidden={imgSrc == null}\n    //             src={imgSrc}\n    //             fluid\n    //           />\n    //           <ReactPlayer\n    //             style={{ padding: \"20px\", minHeight: \"100%\" }}\n    //             hidden={vidSrc == null}\n    //             url={vidSrc}\n    //             controls={true}\n    //             light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n    //             width=\"100%\"\n    //             height=\"100%\"\n    //           />\n    //         </div>\n    //       ),\n    //       extra: (\n    //         <div>\n    //           <Form onSubmit={() => this.onSubmit(index)}>\n    //             <Form.Field inline>\n    //               <Input\n    //                 required\n    //                 focus\n    //                 placeholder=\"Add a comment...\"\n    //                 value={this.state.caption}\n    //                 onChange={(event) =>\n    //                   this.setState({ newComment: event.target.value })\n    //                 }\n    //                 style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n    //               />\n    //               <Button\n    //                 size=\"small\"\n    //                 color=\"linkedin\"\n    //                 content=\"Post Comment\"\n    //                 icon=\"edit\"\n    //                 style={{ height: \"40px\" }}\n    //               />\n    //             </Form.Field>\n    //           </Form>\n    //           <br></br>\n    //           <Button\n    //             onClick={() => this.likePost(index)}\n    //             color=\"red\"\n    //             content=\"Like\"\n    //             icon=\"heart\"\n    //             size=\"medium\"\n    //             label={{ basic: true, color: \"red\", content: post.likes }}\n    //           />\n    //           <Modal\n    //             trigger={\n    //               <Button\n    //                 size=\"medium\"\n    //                 color=\"facebook\"\n    //                 content=\"View Comments\"\n    //                 icon=\"comments\"\n    //                 onClick={() => this.setState({ modal: true })}\n    //               />\n    //             }\n    //             size=\"small\"\n    //           >\n    //             <Header content=\"Comments\" />\n    //             <Modal.Content>\n    //               <List divided items={post.comments.split(\"/\")}></List>\n    //             </Modal.Content>\n    //             <Modal.Actions>\n    //               <Button\n    //                 color=\"red\"\n    //                 content=\"Close\"\n    //                 icon=\"close\"\n    //                 inverted\n    //                 onClick={() => this.setState({ modal: false })}\n    //               />\n    //             </Modal.Actions>\n    //           </Modal>\n    //         </div>\n    //       ),\n    //       fluid: true,\n    //     };\n    //   })\n    // );\n\n    // this.setState({ items: items });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <br></br>\n          <center>\n            <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n              {this.state.userName}\n            </h1>\n            <div\n              style={{\n                backgroundColor: COLORS.divBackground,\n                padding: \"10px\",\n                width: \"500px\",\n                borderRadius: \"20px\",\n                border: \"1px solid\",\n                borderColor: COLORS.menuBackground,\n              }}\n            >\n              <p\n                style={{\n                  color: COLORS.menuBackground,\n                  fontWeight: \"bold\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {this.state.userAddress}\n              </p>\n            </div>\n          </center>\n          <br />\n          <br />\n          <hr />\n          <br />\n          <br />\n          <Grid centered>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground,\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                    start={0}\n                    end={this.state.userPosts}\n                    duration={5}\n                  />\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground,\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                    start={0}\n                    end={this.state.tokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid>\n          <br />\n          <br />\n          <hr />\n          <h1>Your Posts</h1>\n          <br />\n          <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewUser;\n"]},"metadata":{},"sourceType":"module"}