{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/profile/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message, Grid, Container, Modal, List, Header, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nvar Profile = /*#__PURE__*/function (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tokens: 0,\n      username: \"\",\n      useraddress: \"\",\n      userposts: 0,\n      userbalance: 0.0,\n      redeemtokens: 0,\n      inputRedeem: 0,\n      err: false,\n      errMessage: \"\",\n      posts: [],\n      postCount: 0,\n      items: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPosts\", function _callee2() {\n      var posts, items;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              posts = _this.state.posts;\n              console.log(_this.state.postCount);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(Promise.all(posts.map(function _callee(post, index) {\n                var name, src, data, bpic;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(social.methods.getUserDetails(post.owner).call());\n\n                      case 2:\n                        name = _context.sent;\n\n                        if (!(post.imgIpfsHash.length > 0)) {\n                          _context.next = 11;\n                          break;\n                        }\n\n                        _context.next = 6;\n                        return _regeneratorRuntime.awrap(ipfs.files.get(post.imgIpfsHash));\n\n                      case 6:\n                        data = _context.sent;\n                        bpic = _this.uint8ToBase64(data[0].content);\n                        src = \"data:image/png;base64,\" + bpic;\n                        _context.next = 12;\n                        break;\n\n                      case 11:\n                        src = null;\n\n                      case 12:\n                        return _context.abrupt(\"return\", {\n                          key: index,\n                          header: __jsx(\"div\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 99\n                            },\n                            __self: this\n                          }, __jsx(\"h4\", {\n                            style: {\n                              marginBottom: \"0px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 100\n                            },\n                            __self: this\n                          }, name[0]), __jsx(\"p\", {\n                            style: {\n                              color: \"grey\",\n                              marginTop: \"0px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 101\n                            },\n                            __self: this\n                          }, post.timestamp), __jsx(\"h3\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 104\n                            },\n                            __self: this\n                          }, post.caption)),\n                          description: __jsx(\"div\", {\n                            style: {\n                              border: \"2px solid grey\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 108\n                            },\n                            __self: this\n                          }, __jsx(\"p\", {\n                            style: {\n                              margin: \"10px\",\n                              fontSize: \"15px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 109\n                            },\n                            __self: this\n                          }, post.description), __jsx(Image, {\n                            style: {\n                              padding: \"20px\"\n                            },\n                            hidden: src == null,\n                            src: src,\n                            fluid: true,\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 112\n                            },\n                            __self: this\n                          })),\n                          extra: __jsx(\"div\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 121\n                            },\n                            __self: this\n                          }, __jsx(Form, {\n                            onSubmit: function onSubmit() {\n                              return _this.onSubmit(index);\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 122\n                            },\n                            __self: this\n                          }, __jsx(Form.Field, {\n                            inline: true,\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 123\n                            },\n                            __self: this\n                          }, __jsx(Input, {\n                            focus: true,\n                            placeholder: \"Add a comment...\",\n                            value: _this.state.caption,\n                            onChange: function onChange(event) {\n                              return _this.setState({\n                                newComment: event.target.value\n                              });\n                            },\n                            style: {\n                              width: \"70%\",\n                              height: \"40px\",\n                              marginRight: \"0px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 124\n                            },\n                            __self: this\n                          }), __jsx(Button, {\n                            size: \"small\",\n                            color: \"linkedin\",\n                            content: \"Post Comment\",\n                            icon: \"edit\",\n                            style: {\n                              height: \"40px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 133\n                            },\n                            __self: this\n                          }))), __jsx(\"br\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 142\n                            },\n                            __self: this\n                          }), __jsx(Button, {\n                            onClick: function onClick() {\n                              return _this.likePost(index);\n                            },\n                            color: \"red\",\n                            content: \"Like\",\n                            icon: \"heart\",\n                            size: \"medium\",\n                            label: {\n                              basic: true,\n                              color: \"red\",\n                              content: post.likes\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 143\n                            },\n                            __self: this\n                          }), __jsx(Modal, {\n                            trigger: __jsx(Button, {\n                              size: \"medium\",\n                              color: \"facebook\",\n                              content: \"View Comments\",\n                              icon: \"comments\",\n                              onClick: function onClick() {\n                                return _this.setState({\n                                  modal: true\n                                });\n                              },\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 153\n                              },\n                              __self: this\n                            }),\n                            size: \"small\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 151\n                            },\n                            __self: this\n                          }, __jsx(Header, {\n                            content: \"Comments\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 163\n                            },\n                            __self: this\n                          }), __jsx(Modal.Content, {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 164\n                            },\n                            __self: this\n                          }, __jsx(List, {\n                            divided: true,\n                            items: post.comments.split(\"/\"),\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 165\n                            },\n                            __self: this\n                          })), __jsx(Modal.Actions, {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 167\n                            },\n                            __self: this\n                          }, __jsx(Button, {\n                            color: \"red\",\n                            content: \"Close\",\n                            icon: \"close\",\n                            inverted: true,\n                            onClick: function onClick() {\n                              return _this.setState({\n                                modal: false\n                              });\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 168\n                            },\n                            __self: this\n                          })))),\n                          fluid: true\n                        });\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, this, null, Promise);\n              })));\n\n            case 4:\n              items = _context2.sent;\n\n              _this.setState({\n                items: items\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redeemTokens\", function _callee3() {\n      var _this$state, inputRedeem, useraddress, redeemtokens, value;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state = _this.state, inputRedeem = _this$state.inputRedeem, useraddress = _this$state.useraddress, redeemtokens = _this$state.redeemtokens;\n\n              if (!(inputRedeem == 0 || inputRedeem > redeemtokens)) {\n                _context3.next = 5;\n                break;\n              }\n\n              _this.setState({\n                err: true,\n                errMessage: \"You do no have enough Redeemable Tokens\"\n              });\n\n              _context3.next = 16;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              value = inputRedeem * 0.001;\n              value = value.toString();\n              value = web3.utils.toWei(value, \"ether\");\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(social.methods.redeemNTokens(inputRedeem, value).send({\n                from: useraddress\n              }));\n\n            case 11:\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](5);\n              console.log(_context3.t0);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[5, 13]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accs, userDetails, userAddress, userBalance, postCount, posts;\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accs = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(social.methods.getUserDetails(accs[0]).call());\n\n            case 5:\n              userDetails = _context4.sent;\n              userAddress = accs[0];\n              _context4.next = 9;\n              return _regeneratorRuntime.awrap(web3.eth.getBalance(accs[0]));\n\n            case 9:\n              userBalance = _context4.sent;\n              userBalance = web3.utils.fromWei(userBalance, \"ether\");\n              userBalance = parseFloat(userBalance).toFixed(4);\n              console.log(userBalance);\n              this.setState({\n                username: userDetails[0],\n                tokens: userDetails[1],\n                useraddress: userAddress,\n                userposts: userDetails[2],\n                redeemtokens: userDetails[3],\n                userbalance: userBalance\n              });\n              _context4.next = 16;\n              return _regeneratorRuntime.awrap(social.methods.getPostsCount().call());\n\n            case 16:\n              postCount = _context4.sent;\n              _context4.next = 19;\n              return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(postCount)).fill().map(function (element, index) {\n                return social.methods.posts(index).call();\n              })));\n\n            case 19:\n              posts = _context4.sent;\n              this.setState({\n                posts: posts,\n                postCount: postCount\n              });\n              this.renderPosts();\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"uint8ToBase64\",\n    value: function uint8ToBase64(buffer) {\n      var binary = \"\";\n      var bytes = [].slice.call(new Uint8Array(buffer));\n      bytes.forEach(function (b) {\n        return binary += String.fromCharCode(b);\n      });\n      return window.btoa(binary);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontSize: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.state.username), __jsx(\"div\", {\n        style: {\n          backgroundColor: COLORS.divBackground,\n          padding: \"10px\",\n          width: \"500px\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          borderColor: COLORS.menuBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontWeight: \"bold\",\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, this.state.useraddress))), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), __jsx(Grid, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        width: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.menuBackground,\n          color: COLORS.menuText,\n          border: \"2px solid\",\n          borderColor: COLORS.divBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Total Posts\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        start: 0,\n        end: this.state.userposts,\n        duration: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })))), __jsx(Grid.Column, {\n        width: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.divBackground,\n          color: COLORS.menuBackground,\n          border: \"2px solid\",\n          borderColor: COLORS.menuBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Total Tokens Earned\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        start: 0,\n        end: this.state.tokens,\n        duration: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"GTok\"))))), __jsx(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        width: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.divBackground,\n          color: COLORS.menuBackground,\n          border: \"2px solid\",\n          borderColor: COLORS.menuBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Redeemable Tokens\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\",\n          margin: \"10px\"\n        },\n        start: 0.0,\n        end: this.state.redeemtokens,\n        duration: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"GTok\")))), __jsx(Grid.Column, {\n        width: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.menuBackground,\n          color: COLORS.menuText,\n          border: \"2px solid\",\n          borderColor: COLORS.divBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Account Balance\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\",\n          margin: \"10px\"\n        },\n        start: 0.0,\n        end: this.state.userbalance,\n        decimals: 4,\n        duration: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"ETH\")))))), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        style: {\n          color: COLORS.menuBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Redeem Tokens\"), __jsx(\"p\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \"(Note: Tokens can be redeemed if tokens are greater than 20)\"), __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        inline: true,\n        style: {\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontSize: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Tokens to redeem:\", \" \"), __jsx(Input, {\n        required: true,\n        focus: true,\n        placeholder: \"No. of Tokens\",\n        style: {\n          fontSize: \"18px\"\n        },\n        onChange: function onChange(event) {\n          return _this2.setState({\n            inputRedeem: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), __jsx(Button, {\n        icon: \"money\",\n        content: \"Redeem\",\n        style: {\n          height: \"45px\",\n          fontSize: \"16px\",\n          color: COLORS.menuText,\n          backgroundColor: COLORS.menuBackground\n        },\n        onClick: function onClick() {\n          return _this2.redeemTokens();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      })), __jsx(Message, {\n        error: true,\n        header: \"Insufficient Tokens!\",\n        visible: this.state.err,\n        content: this.state.errMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Your Posts\"), __jsx(Card.Group, {\n        centered: true,\n        items: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Profile;\n}(Component); // tokens earned and withdrawable tokens\n// 37.4642\n\n\nexport default Profile;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/profile/index.js"],"names":["React","Component","Form","Button","Input","Image","Message","Grid","Container","Modal","List","Header","Card","Layout","social","web3","ipfs","Router","CountUp","COLORS","Profile","tokens","username","useraddress","userposts","userbalance","redeemtokens","inputRedeem","err","errMessage","posts","postCount","items","state","console","log","Promise","all","map","post","index","methods","getUserDetails","owner","call","name","imgIpfsHash","length","files","get","data","bpic","uint8ToBase64","content","src","key","header","marginBottom","color","marginTop","timestamp","caption","description","border","margin","fontSize","padding","extra","onSubmit","event","setState","newComment","target","value","width","height","marginRight","likePost","basic","likes","modal","comments","split","fluid","toString","utils","toWei","redeemNTokens","send","from","eth","getAccounts","accs","userDetails","userAddress","getBalance","userBalance","fromWei","parseFloat","toFixed","getPostsCount","Array","parseInt","fill","element","renderPosts","buffer","binary","bytes","slice","Uint8Array","forEach","b","String","fromCharCode","window","btoa","menuBackground","backgroundColor","divBackground","borderRadius","borderColor","fontWeight","menuText","alignContent","justifyContent","redeemTokens"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Input,\n  Image,\n  Message,\n  Grid,\n  Container,\n  Modal,\n  List,\n  Header,\n  Card\n} from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nclass Profile extends Component {\n  state = {\n    tokens: 0,\n    username: \"\",\n    useraddress: \"\",\n    userposts: 0,\n    userbalance: 0.0,\n    redeemtokens: 0,\n    inputRedeem: 0,\n    err: false,\n    errMessage: \"\",\n    posts: [],\n    postCount: 0,\n    items: []\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n\n    this.setState({ posts: posts, postCount: postCount });\n    this.renderPosts();\n  }\n\n  uint8ToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n\n    bytes.forEach(b => (binary += String.fromCharCode(b)));\n\n    return window.btoa(binary);\n  }\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    const items = await Promise.all(\n      posts.map(async (post, index) => {\n        const name = await social.methods.getUserDetails(post.owner).call();\n        let src;\n        if (post.imgIpfsHash.length > 0) {\n          const data = await ipfs.files.get(post.imgIpfsHash);\n          const bpic = this.uint8ToBase64(data[0].content);\n          src = \"data:image/png;base64,\" + bpic;\n        } else {\n          src = null;\n        }\n\n        return {\n          key: index,\n          header: (\n            <div>\n              <h4 style={{ marginBottom: \"0px\" }}>{name[0]}</h4>\n              <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n                {post.timestamp}\n              </p>\n              <h3>{post.caption}</h3>\n            </div>\n          ),\n          description: (\n            <div style={{ border: \"2px solid grey\" }}>\n              <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n                {post.description}\n              </p>\n              <Image\n                style={{ padding: \"20px\" }}\n                hidden={src == null}\n                src={src}\n                fluid\n              />\n            </div>\n          ),\n          extra: (\n            <div>\n              <Form onSubmit={() => this.onSubmit(index)}>\n                <Form.Field inline>\n                  <Input\n                    focus\n                    placeholder=\"Add a comment...\"\n                    value={this.state.caption}\n                    onChange={event =>\n                      this.setState({ newComment: event.target.value })\n                    }\n                    style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n                  />\n                  <Button\n                    size=\"small\"\n                    color=\"linkedin\"\n                    content=\"Post Comment\"\n                    icon=\"edit\"\n                    style={{ height: \"40px\" }}\n                  />\n                </Form.Field>\n              </Form>\n              <br></br>\n              <Button\n                onClick={() => this.likePost(index)}\n                color=\"red\"\n                content=\"Like\"\n                icon=\"heart\"\n                size=\"medium\"\n                label={{ basic: true, color: \"red\", content: post.likes }}\n              />\n              <Modal\n                trigger={\n                  <Button\n                    size=\"medium\"\n                    color=\"facebook\"\n                    content=\"View Comments\"\n                    icon=\"comments\"\n                    onClick={() => this.setState({ modal: true })}\n                  />\n                }\n                size=\"small\"\n              >\n                <Header content=\"Comments\" />\n                <Modal.Content>\n                  <List divided items={post.comments.split(\"/\")}></List>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    color=\"red\"\n                    content=\"Close\"\n                    icon=\"close\"\n                    inverted\n                    onClick={() => this.setState({ modal: false })}\n                  />\n                </Modal.Actions>\n              </Modal>\n            </div>\n          ),\n          fluid: true\n        };\n      })\n    );\n\n    this.setState({ items: items });\n  }\n\n  redeemTokens = async () => {\n    const { inputRedeem, useraddress, redeemtokens } = this.state;\n\n    if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n      this.setState({\n        err: true,\n        errMessage: \"You do no have enough Redeemable Tokens\"\n      });\n    } else {\n      try {\n        let value = inputRedeem * 0.001;\n        value = value.toString();\n        value = web3.utils.toWei(value, \"ether\");\n        await social.methods.redeemNTokens(inputRedeem, value).send({\n          from: useraddress\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n        <br></br>\n        <center>\n          <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n            {this.state.username}\n          </h1>\n          <div\n            style={{\n              backgroundColor: COLORS.divBackground,\n              padding: \"10px\",\n              width: \"500px\",\n              borderRadius: \"20px\",\n              border:\"1px solid\",\n              borderColor:COLORS.menuBackground\n            }}\n          >\n            <p style={{ color: COLORS.menuBackground, fontWeight:\"bold\", fontSize: \"15px\" }}>\n              {this.state.useraddress}\n            </p>\n          </div>\n        </center>\n        <br />\n        <br />\n        <hr />\n        <br />\n        <br />\n        <Grid centered>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                    start={0}\n                    end={this.state.userposts}\n                    duration={5}\n                  />\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                    start={0}\n                    end={this.state.tokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Redeemable Tokens</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                      margin: \"10px\"\n                    }}\n                    start={0.0}\n                    end={this.state.redeemtokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground\n                }}\n              >\n                \n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Account Balance</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                      margin: \"10px\"\n                    }}\n                    start={0.0}\n                    end={this.state.userbalance}\n                    decimals={4}\n                    duration={5}\n                  />\n                  <h1>ETH</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <br />\n        <br />\n        <hr />\n        <br />\n\n        <h1 style={{ color: COLORS.menuBackground }}>Redeem Tokens</h1>\n        <p style={{ color: COLORS.menuBackground, fontSize: \"15px\" }}>\n          (Note: Tokens can be redeemed if tokens are greater than 20)\n        </p>\n\n        <Form>\n          <Form.Field inline style={{ height: \"50px\" }}>\n            <label style={{ color: COLORS.menuBackground, fontSize: \"18px\" }}>\n              Tokens to redeem:{\" \"}\n            </label>\n            <Input\n              required\n              focus\n              placeholder=\"No. of Tokens\"\n              style={{ fontSize: \"18px\" }}\n              onChange={event =>\n                this.setState({ inputRedeem: event.target.value })\n              }\n            />\n            <Button\n              icon=\"money\"\n              content=\"Redeem\"\n              style={{\n                height: \"45px\",\n                fontSize: \"16px\",\n                color: COLORS.menuText,\n                backgroundColor: COLORS.menuBackground\n              }}\n              onClick={() => this.redeemTokens()}\n            />\n          </Form.Field>\n          <Message\n            error\n            header=\"Insufficient Tokens!\"\n            visible={this.state.err}\n            content={this.state.errMessage}\n          />\n        </Form>\n        <br />\n        <br />\n        <hr />\n        <h1>Your Posts</h1>\n        <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n// tokens earned and withdrawable tokens\n// 37.4642\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}