{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/users/view/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport social from \"../../../ethereum/social\";\nimport { Container, Grid, Card, Form, Input, Button, Modal, Header, List } from \"semantic-ui-react\";\nimport COLORS from \"../../../colors\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\n\nclass ViewUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      userAddress: \"\",\n      userName: \"\",\n      tokens: 0,\n      userPosts: 0,\n      redeemTokens: 0,\n      items: [],\n      posts: [],\n      postCount: 0\n    });\n\n    _defineProperty(this, \"renderPosts\", async () => {\n      const posts = this.state.posts;\n      console.log(this.state.postCount);\n      const items = await Promise.all(posts.map(async (post, index) => {\n        if (!post.valid || post.owner != this.state.userAddress) {\n          return {\n            key: index\n          };\n        }\n\n        const name = await social.methods.getUserDetails(post.owner).call();\n        let imgSrc = null,\n            vidSrc = null;\n\n        if (post.imgIpfsHash.length > 0) {\n          let hash = post.imgIpfsHash;\n          let type = hash[0];\n          hash = hash.slice(1, hash.length);\n\n          if (type == \"0\") {\n            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n          } else {\n            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n          }\n        }\n\n        console.log(post.imgIpfsHash);\n        return {\n          key: index,\n          header: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, __jsx(\"h4\", {\n            style: {\n              marginBottom: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, name[0]), __jsx(\"p\", {\n            style: {\n              color: \"grey\",\n              marginTop: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, post.timestamp), __jsx(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, post.caption)),\n          description: __jsx(\"div\", {\n            style: {\n              border: \"2px solid grey\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              margin: \"10px\",\n              fontSize: \"15px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, post.description), __jsx(Image, {\n            style: {\n              padding: \"20px\"\n            },\n            hidden: imgSrc == null,\n            src: imgSrc,\n            fluid: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }), __jsx(ReactPlayer, {\n            style: {\n              padding: \"20px\",\n              minHeight: \"100%\"\n            },\n            hidden: vidSrc == null,\n            url: vidSrc,\n            controls: true,\n            light: \"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\",\n            width: \"100%\",\n            height: \"100%\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          })),\n          extra: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, __jsx(Form, {\n            onSubmit: () => this.onSubmit(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, __jsx(Form.Field, {\n            inline: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            focus: true,\n            placeholder: \"Add a comment...\",\n            value: this.state.caption,\n            onChange: event => this.setState({\n              newComment: event.target.value\n            }),\n            style: {\n              width: \"70%\",\n              height: \"40px\",\n              marginRight: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }), __jsx(Button, {\n            size: \"small\",\n            color: \"linkedin\",\n            content: \"Post Comment\",\n            icon: \"edit\",\n            style: {\n              height: \"40px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }))), __jsx(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }), __jsx(Button, {\n            onClick: () => this.likePost(index),\n            color: \"red\",\n            content: \"Like\",\n            icon: \"heart\",\n            size: \"medium\",\n            label: {\n              basic: true,\n              color: \"red\",\n              content: post.likes\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }), __jsx(Modal, {\n            trigger: __jsx(Button, {\n              size: \"medium\",\n              color: \"facebook\",\n              content: \"View Comments\",\n              icon: \"comments\",\n              onClick: () => this.setState({\n                modal: true\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }),\n            size: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, __jsx(Header, {\n            content: \"Comments\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }), __jsx(Modal.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, __jsx(List, {\n            divided: true,\n            items: post.comments.split(\"/\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          })), __jsx(Modal.Actions, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, __jsx(Button, {\n            color: \"red\",\n            content: \"Close\",\n            icon: \"close\",\n            inverted: true,\n            onClick: () => this.setState({\n              modal: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          })))),\n          fluid: true\n        };\n      }));\n      this.setState({\n        items: items\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      userAddress: props.query.address\n    };\n  }\n\n  async componentDidMount() {\n    const userAddress = this.props.userAddress;\n    const userDetails = await social.methods.getUserDetails(userAddress).call();\n    console.log(userDetails);\n    this.setState({\n      userName: userDetails[0],\n      tokens: userDetails[1],\n      userPosts: userDetails[2],\n      redeemTokens: userDetails[3],\n      userAddress: userAddress\n    });\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(Array(parseInt(postCount)).fill().map((element, index) => {\n      return social.methods.posts(index).call();\n    }));\n    console.log(posts);\n    this.setState({\n      posts: posts,\n      postCount: postCount\n    }); // this.renderPosts();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.userName), __jsx(\"div\", {\n      style: {\n        backgroundColor: COLORS.divBackground,\n        padding: \"10px\",\n        width: \"500px\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontWeight: \"bold\",\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.userAddress))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), __jsx(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Total Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.userPosts,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })))), __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Total Tokens Earned\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.tokens,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"GTok\"))))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Your Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), __jsx(Card.Group, {\n      centered: true,\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ViewUser;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/users/view/index.js"],"names":["React","Component","Layout","social","Container","Grid","Card","Form","Input","Button","Modal","Header","List","COLORS","CountUp","ReactPlayer","ViewUser","userAddress","userName","tokens","userPosts","redeemTokens","items","posts","postCount","state","console","log","Promise","all","map","post","index","valid","owner","key","name","methods","getUserDetails","call","imgSrc","vidSrc","imgIpfsHash","length","hash","type","slice","header","marginBottom","color","marginTop","timestamp","caption","description","border","margin","fontSize","padding","minHeight","extra","onSubmit","event","setState","newComment","target","value","width","height","marginRight","likePost","basic","content","likes","modal","comments","split","fluid","getInitialProps","props","query","address","componentDidMount","userDetails","getPostsCount","Array","parseInt","fill","element","render","menuBackground","backgroundColor","divBackground","borderRadius","borderColor","fontWeight","menuText","alignContent","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport social from \"../../../ethereum/social\";\nimport {\n  Container,\n  Grid,\n  Card,\n  Form,\n  Input,\n  Button,\n  Modal,\n  Header,\n  List\n} from \"semantic-ui-react\";\nimport COLORS from \"../../../colors\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\n\nclass ViewUser extends Component {\n  state = {\n    userAddress: \"\",\n    userName: \"\",\n    tokens: 0,\n    userPosts: 0,\n    redeemTokens: 0,\n    items: [],\n    posts: [],\n    postCount: 0,\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userAddress: props.query.address,\n    };\n  }\n\n  async componentDidMount() {\n    const userAddress = this.props.userAddress;\n\n    const userDetails = await social.methods.getUserDetails(userAddress).call();\n    console.log(userDetails);\n\n    this.setState({\n      userName: userDetails[0],\n      tokens: userDetails[1],\n      userPosts: userDetails[2],\n      redeemTokens: userDetails[3],\n      userAddress: userAddress,\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n    console.log(posts);\n    this.setState({ posts: posts, postCount: postCount });\n    // this.renderPosts();\n  }\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    const items = await Promise.all(\n      posts.map(async (post, index) => {\n        if (!post.valid || post.owner != this.state.userAddress) {\n          return {\n            key: index,\n          };\n        }\n        const name = await social.methods.getUserDetails(post.owner).call();\n        let imgSrc = null,\n          vidSrc = null;\n        if (post.imgIpfsHash.length > 0) {\n          let hash = post.imgIpfsHash;\n          let type = hash[0];\n          hash = hash.slice(1, hash.length);\n\n          if (type == \"0\") {\n            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n          } else {\n            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n          }\n        }\n\n        console.log(post.imgIpfsHash);\n\n        return {\n          key: index,\n          header: (\n            <div>\n              <h4 style={{ marginBottom: \"0px\" }}>{name[0]}</h4>\n              <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n                {post.timestamp}\n              </p>\n              <h3>{post.caption}</h3>\n            </div>\n          ),\n          description: (\n            <div style={{ border: \"2px solid grey\" }}>\n              <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n                {post.description}\n              </p>\n              <Image\n                style={{ padding: \"20px\" }}\n                hidden={imgSrc == null}\n                src={imgSrc}\n                fluid\n              />\n              <ReactPlayer\n                style={{ padding: \"20px\", minHeight: \"100%\" }}\n                hidden={vidSrc == null}\n                url={vidSrc}\n                controls={true}\n                light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n                width=\"100%\"\n                height=\"100%\"\n              />\n            </div>\n          ),\n          extra: (\n            <div>\n              <Form onSubmit={() => this.onSubmit(index)}>\n                <Form.Field inline>\n                  <Input\n                    required\n                    focus\n                    placeholder=\"Add a comment...\"\n                    value={this.state.caption}\n                    onChange={(event) =>\n                      this.setState({ newComment: event.target.value })\n                    }\n                    style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n                  />\n                  <Button\n                    size=\"small\"\n                    color=\"linkedin\"\n                    content=\"Post Comment\"\n                    icon=\"edit\"\n                    style={{ height: \"40px\" }}\n                  />\n                </Form.Field>\n              </Form>\n              <br></br>\n              <Button\n                onClick={() => this.likePost(index)}\n                color=\"red\"\n                content=\"Like\"\n                icon=\"heart\"\n                size=\"medium\"\n                label={{ basic: true, color: \"red\", content: post.likes }}\n              />\n              <Modal\n                trigger={\n                  <Button\n                    size=\"medium\"\n                    color=\"facebook\"\n                    content=\"View Comments\"\n                    icon=\"comments\"\n                    onClick={() => this.setState({ modal: true })}\n                  />\n                }\n                size=\"small\"\n              >\n                <Header content=\"Comments\" />\n                <Modal.Content>\n                  <List divided items={post.comments.split(\"/\")}></List>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    color=\"red\"\n                    content=\"Close\"\n                    icon=\"close\"\n                    inverted\n                    onClick={() => this.setState({ modal: false })}\n                  />\n                </Modal.Actions>\n              </Modal>\n            </div>\n          ),\n          fluid: true,\n        };\n      })\n    );\n\n    this.setState({ items: items });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <br></br>\n          <center>\n            <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n              {this.state.userName}\n            </h1>\n            <div\n              style={{\n                backgroundColor: COLORS.divBackground,\n                padding: \"10px\",\n                width: \"500px\",\n                borderRadius: \"20px\",\n                border: \"1px solid\",\n                borderColor: COLORS.menuBackground,\n              }}\n            >\n              <p\n                style={{\n                  color: COLORS.menuBackground,\n                  fontWeight: \"bold\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {this.state.userAddress}\n              </p>\n            </div>\n          </center>\n          <br />\n          <br />\n          <hr />\n          <br />\n          <br />\n          <Grid centered>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground,\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                    start={0}\n                    end={this.state.userPosts}\n                    duration={5}\n                  />\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground,\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                    start={0}\n                    end={this.state.tokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid>\n          <br />\n          <br />\n          <hr />\n          <h1>Your Posts</h1>\n          <br />\n          <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewUser;\n"]},"metadata":{},"sourceType":"module"}