{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message, Grid, Container, Modal, List, Header, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\nimport COLORS from \"../../colors\";\nimport { CustButton } from \"../../components/styledComponents\";\n\nvar Profile = /*#__PURE__*/function (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tokens: 0,\n      username: \"\",\n      useraddress: \"\",\n      userposts: 0,\n      userbalance: 0.0,\n      redeemtokens: 0,\n      inputRedeem: 0,\n      err: false,\n      errMessage: \"\",\n      posts: [],\n      postCount: 0,\n      items: [],\n      newComment: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hidePost\", function _callee(index) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(index);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(social.methods.deletePost(index).send({\n                from: _this.state.useraddress\n              }));\n\n            case 4:\n              Router.pushRoute(\"/\");\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee2(index) {\n      var accs, str;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(index);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 3:\n              accs = _context2.sent;\n              str = _this.state.username + \": \" + _this.state.newComment;\n              console.log(str);\n              _context2.prev = 6;\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(social.methods.postComment(index, str).send({\n                from: accs[0]\n              }));\n\n            case 9:\n              console.log(\"Comment Posted by \" + accs[0]);\n\n              _this.setState({\n                caption: \"\"\n              });\n\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](6);\n              console.log(_context2.t0.message);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[6, 13]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPosts\", function _callee4() {\n      var posts, items;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              posts = _this.state.posts;\n              console.log(_this.state.postCount);\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(Promise.all(posts.map(function _callee3(post, index) {\n                var name, imgSrc, vidSrc, hash, type;\n                return _regeneratorRuntime.async(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        if (!(!post.valid || post.owner != _this.state.useraddress)) {\n                          _context3.next = 2;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", {\n                          key: index\n                        });\n\n                      case 2:\n                        _context3.next = 4;\n                        return _regeneratorRuntime.awrap(social.methods.getUserDetails(post.owner).call());\n\n                      case 4:\n                        name = _context3.sent;\n                        imgSrc = null, vidSrc = null;\n\n                        if (post.imgIpfsHash.length > 0) {\n                          hash = post.imgIpfsHash;\n                          type = hash[0];\n                          hash = hash.slice(1, hash.length);\n\n                          if (type == \"0\") {\n                            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n                          } else {\n                            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n                          }\n                        }\n\n                        console.log(post.imgIpfsHash);\n                        return _context3.abrupt(\"return\", {\n                          key: index,\n                          header: __jsx(\"div\", null, __jsx(\"h4\", {\n                            style: {\n                              marginBottom: \"0px\"\n                            }\n                          }, name[0]), __jsx(\"p\", {\n                            style: {\n                              color: \"grey\",\n                              marginTop: \"0px\"\n                            }\n                          }, post.timestamp), __jsx(\"h3\", null, post.caption)),\n                          description: __jsx(\"div\", {\n                            style: {\n                              border: \"2px solid grey\"\n                            }\n                          }, __jsx(\"p\", {\n                            style: {\n                              margin: \"10px\",\n                              fontSize: \"15px\"\n                            }\n                          }, post.description), __jsx(Image, {\n                            style: {\n                              padding: \"20px\"\n                            },\n                            hidden: imgSrc == null,\n                            src: imgSrc,\n                            fluid: true\n                          }), __jsx(ReactPlayer, {\n                            style: {\n                              padding: \"20px\",\n                              minHeight: \"100%\"\n                            },\n                            hidden: vidSrc == null,\n                            url: vidSrc,\n                            controls: true // light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n                            ,\n                            width: \"100%\",\n                            height: \"100%\"\n                          })),\n                          extra: __jsx(\"div\", null, __jsx(Form, {\n                            onSubmit: function onSubmit() {\n                              return _this.onSubmit(index);\n                            }\n                          }, __jsx(Form.Field, {\n                            inline: true\n                          }, __jsx(Input, {\n                            required: true,\n                            focus: true,\n                            placeholder: \"Add a comment...\",\n                            value: _this.state.caption,\n                            onChange: function onChange(event) {\n                              return _this.setState({\n                                newComment: event.target.value\n                              });\n                            },\n                            style: {\n                              width: \"70%\",\n                              height: \"40px\",\n                              marginRight: \"0px\"\n                            }\n                          }), __jsx(CustButton, {\n                            size: \"small\",\n                            color: \"linkedin\",\n                            content: \"Post Comment\",\n                            icon: \"edit\",\n                            style: {\n                              height: \"40px\"\n                            }\n                          }))), __jsx(\"br\", null), __jsx(CustButton, {\n                            onClick: function onClick() {\n                              return _this.likePost(index);\n                            },\n                            color: \"red\",\n                            content: \"Like\",\n                            icon: \"heart\",\n                            size: \"medium\",\n                            label: {\n                              basic: true,\n                              color: \"red\",\n                              content: post.likes\n                            }\n                          }), __jsx(Modal, {\n                            trigger: __jsx(CustButton, {\n                              size: \"medium\",\n                              color: \"facebook\",\n                              content: \"View Comments\",\n                              icon: \"comments\",\n                              onClick: function onClick() {\n                                return _this.setState({\n                                  modal: true\n                                });\n                              }\n                            }),\n                            size: \"small\"\n                          }, __jsx(Header, {\n                            content: \"Comments\"\n                          }), __jsx(Modal.Content, null, __jsx(List, {\n                            divided: true,\n                            items: post.comments.split(\"/\")\n                          })), __jsx(Modal.Actions, null, __jsx(CustButton, {\n                            color: \"red\",\n                            content: \"Close\",\n                            icon: \"close\",\n                            inverted: true,\n                            onClick: function onClick() {\n                              return _this.setState({\n                                modal: false\n                              });\n                            }\n                          }))), __jsx(CustButton, {\n                            style: {\n                              marginLeft: \"auto\"\n                            },\n                            content: \"Hide\",\n                            icon: \"hide\",\n                            color: \"black\",\n                            onClick: function onClick() {\n                              return _this.hidePost(index);\n                            }\n                          })),\n                          fluid: true\n                        });\n\n                      case 9:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              })));\n\n            case 4:\n              items = _context4.sent;\n\n              _this.setState({\n                items: items\n              });\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redeemTokens\", function _callee5() {\n      var _this$state, inputRedeem, useraddress, redeemtokens, value;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this$state = _this.state, inputRedeem = _this$state.inputRedeem, useraddress = _this$state.useraddress, redeemtokens = _this$state.redeemtokens;\n\n              if (!(inputRedeem == 0 || inputRedeem > redeemtokens)) {\n                _context5.next = 5;\n                break;\n              }\n\n              _this.setState({\n                err: true,\n                errMessage: \"You do no have enough Redeemable Tokens\"\n              });\n\n              _context5.next = 16;\n              break;\n\n            case 5:\n              _context5.prev = 5;\n              value = inputRedeem * 0.001;\n              value = value.toString();\n              value = web3.utils.toWei(value, \"ether\");\n              _context5.next = 11;\n              return _regeneratorRuntime.awrap(social.methods.redeemNTokens(inputRedeem, value).send({\n                from: useraddress\n              }));\n\n            case 11:\n              _context5.next = 16;\n              break;\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](5);\n              console.log(_context5.t0);\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[5, 13]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accs, userDetails, userAddress, userBalance, postCount, posts;\n      return _regeneratorRuntime.async(function componentDidMount$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accs = _context6.sent;\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(social.methods.getUserDetails(accs[0]).call());\n\n            case 5:\n              userDetails = _context6.sent;\n              userAddress = accs[0];\n              _context6.next = 9;\n              return _regeneratorRuntime.awrap(web3.eth.getBalance(accs[0]));\n\n            case 9:\n              userBalance = _context6.sent;\n              userBalance = web3.utils.fromWei(userBalance, \"ether\");\n              userBalance = parseFloat(userBalance).toFixed(4);\n              console.log(userBalance);\n              this.setState({\n                username: userDetails[0],\n                tokens: userDetails[1],\n                useraddress: userAddress,\n                userposts: userDetails[2],\n                redeemtokens: userDetails[3],\n                userbalance: userBalance\n              });\n              _context6.next = 16;\n              return _regeneratorRuntime.awrap(social.methods.getPostsCount().call());\n\n            case 16:\n              postCount = _context6.sent;\n              _context6.next = 19;\n              return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(postCount)).fill().map(function (element, index) {\n                return social.methods.posts(index).call();\n              })));\n\n            case 19:\n              posts = _context6.sent;\n              this.setState({\n                posts: posts,\n                postCount: postCount\n              });\n              this.renderPosts();\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Container, null, __jsx(\"br\", null), __jsx(\"center\", null, __jsx(\"h1\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontSize: \"50px\"\n        }\n      }, this.state.username), __jsx(\"div\", {\n        style: {\n          backgroundColor: COLORS.divBackground,\n          padding: \"10px\",\n          width: \"500px\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          borderColor: COLORS.menuBackground\n        }\n      }, __jsx(\"p\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontWeight: \"bold\",\n          fontSize: \"15px\"\n        }\n      }, this.state.useraddress))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Grid, {\n        centered: true\n      }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: \"8\"\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.menuBackground,\n          color: COLORS.menuText,\n          border: \"2px solid\",\n          borderColor: COLORS.divBackground\n        }\n      }, __jsx(\"center\", null, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        }\n      }, \"Total Posts\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        start: 0,\n        end: this.state.userposts,\n        duration: 5\n      })))), __jsx(Grid.Column, {\n        width: \"8\"\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.divBackground,\n          color: COLORS.menuBackground,\n          border: \"2px solid\",\n          borderColor: COLORS.menuBackground\n        }\n      }, __jsx(\"center\", null, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        }\n      }, \"Total Tokens Earned\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        start: 0,\n        end: this.state.tokens,\n        duration: 5\n      }), __jsx(\"h1\", null, \"GTok\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: \"8\"\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.divBackground,\n          color: COLORS.menuBackground,\n          border: \"2px solid\",\n          borderColor: COLORS.menuBackground\n        }\n      }, __jsx(\"center\", null, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        }\n      }, \"Redeemable Tokens\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\",\n          margin: \"10px\"\n        },\n        start: 0.0,\n        end: this.state.redeemtokens,\n        duration: 5\n      }), __jsx(\"h1\", null, \"GTok\")))), __jsx(Grid.Column, {\n        width: \"8\"\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.menuBackground,\n          color: COLORS.menuText,\n          border: \"2px solid\",\n          borderColor: COLORS.divBackground\n        }\n      }, __jsx(\"center\", null, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        }\n      }, \"Account Balance\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\",\n          margin: \"10px\"\n        },\n        start: 0.0,\n        end: this.state.userbalance,\n        decimals: 4,\n        duration: 5\n      }), __jsx(\"h1\", null, \"ETH\")))))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(\"h1\", {\n        style: {\n          color: COLORS.menuBackground\n        }\n      }, \"Redeem Tokens\"), __jsx(\"p\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontSize: \"15px\"\n        }\n      }, \"(Note: Tokens can be redeemed if tokens are greater than 20)\"), __jsx(Form, null, __jsx(Form.Field, {\n        inline: true,\n        style: {\n          height: \"50px\"\n        }\n      }, __jsx(\"label\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontSize: \"18px\"\n        }\n      }, \"Tokens to redeem:\", \" \"), __jsx(Input, {\n        required: true,\n        focus: true,\n        placeholder: \"No. of Tokens\",\n        style: {\n          fontSize: \"18px\"\n        },\n        onChange: function onChange(event) {\n          return _this2.setState({\n            inputRedeem: event.target.value\n          });\n        }\n      }), __jsx(CustButton, {\n        icon: \"money\",\n        content: \"Redeem\",\n        style: {\n          fontSize: \"16px\",\n          color: COLORS.menuText,\n          backgroundColor: COLORS.menuBackground\n        },\n        onClick: function onClick() {\n          return _this2.redeemTokens();\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Insufficient Tokens!\",\n        visible: this.state.err,\n        content: this.state.errMessage\n      })), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"h1\", null, \"Your Posts\"), __jsx(\"br\", null), __jsx(Card.Group, {\n        centered: true,\n        items: this.state.items\n      })));\n    }\n  }]);\n\n  return Profile;\n}(Component); // tokens earned and withdrawable tokens\n// 37.4642\n\n\nexport default Profile;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/profile/index.js"],"names":["React","Component","Form","Button","Input","Image","Message","Grid","Container","Modal","List","Header","Card","Layout","social","web3","ipfs","Router","CountUp","ReactPlayer","COLORS","CustButton","Profile","tokens","username","useraddress","userposts","userbalance","redeemtokens","inputRedeem","err","errMessage","posts","postCount","items","newComment","index","console","log","methods","deletePost","send","from","state","pushRoute","message","eth","getAccounts","accs","str","postComment","setState","caption","Promise","all","map","post","valid","owner","key","getUserDetails","call","name","imgSrc","vidSrc","imgIpfsHash","length","hash","type","slice","header","marginBottom","color","marginTop","timestamp","description","border","margin","fontSize","padding","minHeight","extra","onSubmit","event","target","value","width","height","marginRight","likePost","basic","content","likes","modal","comments","split","marginLeft","hidePost","fluid","toString","utils","toWei","redeemNTokens","userDetails","userAddress","getBalance","userBalance","fromWei","parseFloat","toFixed","getPostsCount","Array","parseInt","fill","element","renderPosts","menuBackground","backgroundColor","divBackground","borderRadius","borderColor","fontWeight","menuText","alignContent","justifyContent","redeemTokens"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Input,\n  Image,\n  Message,\n  Grid,\n  Container,\n  Modal,\n  List,\n  Header,\n  Card,\n} from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\nimport COLORS from \"../../colors\";\nimport { CustButton } from \"../../components/styledComponents\";\n\n\nclass Profile extends Component {\n  state = {\n    tokens: 0,\n    username: \"\",\n    useraddress: \"\",\n    userposts: 0,\n    userbalance: 0.0,\n    redeemtokens: 0,\n    inputRedeem: 0,\n    err: false,\n    errMessage: \"\",\n    posts: [],\n    postCount: 0,\n    items: [],\n    newComment: \"\",\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance,\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n\n    this.setState({ posts: posts, postCount: postCount });\n    this.renderPosts();\n  }\n\n  hidePost = async (index) => {\n    console.log(index);\n\n    try {\n      await social.methods\n        .deletePost(index)\n        .send({ from: this.state.useraddress });\n      Router.pushRoute(\"/\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  onSubmit = async (index) => {\n    console.log(index);\n    const accs = await web3.eth.getAccounts();\n\n    var str = this.state.username + \": \" + this.state.newComment;\n    console.log(str);\n    try {\n      await social.methods.postComment(index, str).send({ from: accs[0] });\n      console.log(\"Comment Posted by \" + accs[0]);\n      this.setState({ caption: \"\" });\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    const items = await Promise.all(\n      posts.map(async (post, index) => {\n        if (!post.valid || post.owner!=this.state.useraddress) {\n          return {\n            key: index,\n          };\n        }\n        const name = await social.methods.getUserDetails(post.owner).call();\n        let imgSrc = null,\n          vidSrc = null;\n        if (post.imgIpfsHash.length > 0) {\n          let hash = post.imgIpfsHash;\n          let type = hash[0];\n          hash = hash.slice(1, hash.length);\n\n          if (type == \"0\") {\n            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n          } else {\n            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n          }\n        }\n\n        console.log(post.imgIpfsHash);\n\n        return {\n          key: index,\n          header: (\n            <div>\n              <h4 style={{ marginBottom: \"0px\" }}>{name[0]}</h4>\n              <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n                {post.timestamp}\n              </p>\n              <h3>{post.caption}</h3>\n            </div>\n          ),\n          description: (\n            <div style={{ border: \"2px solid grey\" }}>\n              <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n                {post.description}\n              </p>\n              <Image\n                style={{ padding: \"20px\" }}\n                hidden={imgSrc == null}\n                src={imgSrc}\n                fluid\n              />\n              <ReactPlayer\n                style={{ padding: \"20px\", minHeight: \"100%\" }}\n                hidden={vidSrc == null}\n                url={vidSrc}\n                controls={true}\n                // light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n                width=\"100%\"\n                height=\"100%\"\n              />\n            </div>\n          ),\n          extra: (\n            <div>\n              <Form onSubmit={() => this.onSubmit(index)}>\n                <Form.Field inline>\n                  <Input\n                    required\n                    focus\n                    placeholder=\"Add a comment...\"\n                    value={this.state.caption}\n                    onChange={(event) =>\n                      this.setState({ newComment: event.target.value })\n                    }\n                    style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n                  />\n                  <CustButton\n                    size=\"small\"\n                    color=\"linkedin\"\n                    content=\"Post Comment\"\n                    icon=\"edit\"\n                    style={{ height: \"40px\" }}\n                  />\n                </Form.Field>\n              </Form>\n              <br></br>\n              <CustButton\n                onClick={() => this.likePost(index)}\n                color=\"red\"\n                content=\"Like\"\n                icon=\"heart\"\n                size=\"medium\"\n                label={{ basic: true, color: \"red\", content: post.likes }}\n              />\n              <Modal\n                trigger={\n                  <CustButton\n                    size=\"medium\"\n                    color=\"facebook\"\n                    content=\"View Comments\"\n                    icon=\"comments\"\n                    onClick={() => this.setState({ modal: true })}\n                  />\n                }\n                size=\"small\"\n              >\n                <Header content=\"Comments\" />\n                <Modal.Content>\n                  <List divided items={post.comments.split(\"/\")}></List>\n                </Modal.Content>\n                <Modal.Actions>\n                  <CustButton\n                    color=\"red\"\n                    content=\"Close\"\n                    icon=\"close\"\n                    inverted\n                    onClick={() => this.setState({ modal: false })}\n                  />\n                </Modal.Actions>\n              </Modal>\n              <CustButton\n                style={{ marginLeft: \"auto\" }}\n                content=\"Hide\"\n                icon=\"hide\"\n                color=\"black\"\n                onClick={() => this.hidePost(index)}\n              />\n            </div>\n          ),\n          fluid: true,\n        };\n      })\n    );\n\n    this.setState({ items: items });\n  };\n\n  redeemTokens = async () => {\n    const { inputRedeem, useraddress, redeemtokens } = this.state;\n\n    if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n      this.setState({\n        err: true,\n        errMessage: \"You do no have enough Redeemable Tokens\",\n      });\n    } else {\n      try {\n        let value = inputRedeem * 0.001;\n        value = value.toString();\n        value = web3.utils.toWei(value, \"ether\");\n        await social.methods.redeemNTokens(inputRedeem, value).send({\n          from: useraddress,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <br></br>\n          <center>\n            <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n              {this.state.username}\n            </h1>\n            <div\n              style={{\n                backgroundColor: COLORS.divBackground,\n                padding: \"10px\",\n                width: \"500px\",\n                borderRadius: \"20px\",\n                border: \"1px solid\",\n                borderColor: COLORS.menuBackground,\n              }}\n            >\n              <p\n                style={{\n                  color: COLORS.menuBackground,\n                  fontWeight: \"bold\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {this.state.useraddress}\n              </p>\n            </div>\n          </center>\n          <br />\n          <br />\n          <hr />\n          <br />\n          <br />\n          <Grid centered>\n            <Grid.Row>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.menuBackground,\n                    color: COLORS.menuText,\n                    border: \"2px solid\",\n                    borderColor: COLORS.divBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                      start={0}\n                      end={this.state.userposts}\n                      duration={5}\n                    />\n                  </center>\n                </div>\n              </Grid.Column>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.divBackground,\n                    color: COLORS.menuBackground,\n                    border: \"2px solid\",\n                    borderColor: COLORS.menuBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                      start={0}\n                      end={this.state.tokens}\n                      duration={5}\n                    />\n                    <h1>GTok</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.divBackground,\n                    color: COLORS.menuBackground,\n                    border: \"2px solid\",\n                    borderColor: COLORS.menuBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Redeemable Tokens</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"10px\",\n                      }}\n                      start={0.0}\n                      end={this.state.redeemtokens}\n                      duration={5}\n                    />\n                    <h1>GTok</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.menuBackground,\n                    color: COLORS.menuText,\n                    border: \"2px solid\",\n                    borderColor: COLORS.divBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Account Balance</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"10px\",\n                      }}\n                      start={0.0}\n                      end={this.state.userbalance}\n                      decimals={4}\n                      duration={5}\n                    />\n                    <h1>ETH</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <br />\n          <br />\n          <hr />\n          <br />\n\n          <h1 style={{ color: COLORS.menuBackground }}>Redeem Tokens</h1>\n          <p style={{ color: COLORS.menuBackground, fontSize: \"15px\" }}>\n            (Note: Tokens can be redeemed if tokens are greater than 20)\n          </p>\n\n          <Form>\n            <Form.Field inline style={{ height: \"50px\" }}>\n              <label style={{ color: COLORS.menuBackground, fontSize: \"18px\" }}>\n                Tokens to redeem:{\" \"}\n              </label>\n              <Input\n                required\n                focus\n                placeholder=\"No. of Tokens\"\n                style={{ fontSize: \"18px\" }}\n                onChange={(event) =>\n                  this.setState({ inputRedeem: event.target.value })\n                }\n              />\n              <CustButton\n                icon=\"money\"\n                content=\"Redeem\"\n                style={{\n                  fontSize: \"16px\",\n                  color: COLORS.menuText,\n                  backgroundColor: COLORS.menuBackground,\n                }}\n                onClick={() => this.redeemTokens()}\n              />\n            </Form.Field>\n            <Message\n              error\n              header=\"Insufficient Tokens!\"\n              visible={this.state.err}\n              content={this.state.errMessage}\n            />\n          </Form>\n          <br />\n          <br />\n          <hr />\n          <h1>Your Posts</h1>\n          <br />\n          <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n// tokens earned and withdrawable tokens\n// 37.4642\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}