{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message, Grid, Container } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      tokens: 0,\n      username: \"\",\n      useraddress: \"\",\n      userposts: 0,\n      userbalance: 0.0,\n      redeemtokens: 0,\n      inputRedeem: 0,\n      err: false,\n      errMessage: \"\"\n    });\n\n    _defineProperty(this, \"redeemTokens\", async () => {\n      const {\n        inputRedeem,\n        useraddress,\n        redeemtokens\n      } = this.state;\n\n      if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n        this.setState({\n          err: true,\n          errMessage: \"You do no have enough Redeemable Tokens\"\n        });\n      } else {\n        try {\n          let value = inputRedeem * 0.001;\n          value = value.toString();\n          value = web3.utils.toWei(value, \"ether\");\n          await social.methods.redeemNTokens(inputRedeem, value).send({\n            from: useraddress\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Container, null, __jsx(\"br\", null), __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"50px\"\n      }\n    }, this.state.username), __jsx(\"div\", {\n      style: {\n        backgroundColor: COLORS.divBackground,\n        padding: \"10px\",\n        width: \"500px\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        borderColor: COLORS.menuBackground\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontWeight: \"bold\",\n        fontSize: \"15px\"\n      }\n    }, this.state.useraddress))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Grid, {\n      centered: true\n    }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Total Posts\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.userposts,\n      duration: 5\n    })))), __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Total Tokens Earned\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.tokens,\n      duration: 5\n    }), __jsx(\"h1\", null, \"GTok\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Redeemable Tokens\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.redeemtokens,\n      duration: 5\n    }), __jsx(\"h1\", null, \"GTok\")))), __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Account Balance\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.userbalance,\n      decimals: 4,\n      duration: 5\n    }), __jsx(\"h1\", null, \"ETH\")))))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground\n      }\n    }, \"Redeem Tokens\"), __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"15px\"\n      }\n    }, \"(Note: Tokens can be redeemed if tokens are greater than 20)\"), __jsx(Form, null, __jsx(Form.Field, {\n      inline: true,\n      style: {\n        height: \"50px\"\n      }\n    }, __jsx(\"label\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"18px\"\n      }\n    }, \"Tokens to redeem:\", \" \"), __jsx(Input, {\n      required: true,\n      focus: true,\n      placeholder: \"No. of Tokens\",\n      style: {\n        fontSize: \"18px\"\n      },\n      onChange: event => this.setState({\n        inputRedeem: event.target.value\n      })\n    }), __jsx(Button, {\n      icon: \"money\",\n      content: \"Redeem\",\n      style: {\n        height: \"45px\",\n        fontSize: \"16px\",\n        color: COLORS.menuText,\n        backgroundColor: COLORS.menuBackground\n      },\n      onClick: () => this.redeemTokens()\n    })), __jsx(Message, {\n      error: true,\n      header: \"Insufficient Tokens!\",\n      visible: this.state.err,\n      content: this.state.errMessage\n    })), __jsx(\"br\", null), __jsx(\"br\", null)));\n  }\n\n} // tokens earned and withdrawable tokens\n// 37.4642\n\n\nexport default Profile;","map":{"version":3,"sources":["/home/hrishib/Desktop/prototype/pages/profile/index.js"],"names":["React","Component","Form","Button","Input","Image","Message","Grid","Container","Layout","social","web3","ipfs","Router","CountUp","COLORS","Profile","tokens","username","useraddress","userposts","userbalance","redeemtokens","inputRedeem","err","errMessage","state","setState","value","toString","utils","toWei","methods","redeemNTokens","send","from","console","log","componentDidMount","accs","eth","getAccounts","userDetails","getUserDetails","call","userAddress","userBalance","getBalance","fromWei","parseFloat","toFixed","render","color","menuBackground","fontSize","backgroundColor","divBackground","padding","width","borderRadius","border","borderColor","fontWeight","height","menuText","alignContent","justifyContent","margin","event","target","redeemTokens"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Input,\n  Image,\n  Message,\n  Grid,\n  Container\n} from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nclass Profile extends Component {\n  state = {\n    tokens: 0,\n    username: \"\",\n    useraddress: \"\",\n    userposts: 0,\n    userbalance: 0.0,\n    redeemtokens: 0,\n    inputRedeem: 0,\n    err: false,\n    errMessage: \"\"\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance\n    });\n  }\n\n  redeemTokens = async () => {\n    const { inputRedeem, useraddress, redeemtokens } = this.state;\n\n    if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n      this.setState({\n        err: true,\n        errMessage: \"You do no have enough Redeemable Tokens\"\n      });\n    } else {\n      try {\n        let value = inputRedeem * 0.001;\n        value = value.toString();\n        value = web3.utils.toWei(value, \"ether\");\n        await social.methods.redeemNTokens(inputRedeem, value).send({\n          from: useraddress\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n        <br></br>\n        <center>\n          <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n            {this.state.username}\n          </h1>\n          <div\n            style={{\n              backgroundColor: COLORS.divBackground,\n              padding: \"10px\",\n              width: \"500px\",\n              borderRadius: \"20px\",\n              border:\"1px solid\",\n              borderColor:COLORS.menuBackground\n            }}\n          >\n            <p style={{ color: COLORS.menuBackground, fontWeight:\"bold\", fontSize: \"15px\" }}>\n              {this.state.useraddress}\n            </p>\n          </div>\n        </center>\n        <br />\n        <br />\n        <hr />\n        <br />\n        <br />\n        <Grid centered>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                    start={0}\n                    end={this.state.userposts}\n                    duration={5}\n                  />\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                    start={0}\n                    end={this.state.tokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Redeemable Tokens</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                      margin: \"10px\"\n                    }}\n                    start={0.0}\n                    end={this.state.redeemtokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground\n                }}\n              >\n                \n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Account Balance</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                      margin: \"10px\"\n                    }}\n                    start={0.0}\n                    end={this.state.userbalance}\n                    decimals={4}\n                    duration={5}\n                  />\n                  <h1>ETH</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <br />\n        <br />\n        <hr />\n        <br />\n\n        <h1 style={{ color: COLORS.menuBackground }}>Redeem Tokens</h1>\n        <p style={{ color: COLORS.menuBackground, fontSize: \"15px\" }}>\n          (Note: Tokens can be redeemed if tokens are greater than 20)\n        </p>\n\n        <Form>\n          <Form.Field inline style={{ height: \"50px\" }}>\n            <label style={{ color: COLORS.menuBackground, fontSize: \"18px\" }}>\n              Tokens to redeem:{\" \"}\n            </label>\n            <Input\n              required\n              focus\n              placeholder=\"No. of Tokens\"\n              style={{ fontSize: \"18px\" }}\n              onChange={event =>\n                this.setState({ inputRedeem: event.target.value })\n              }\n            />\n            <Button\n              icon=\"money\"\n              content=\"Redeem\"\n              style={{\n                height: \"45px\",\n                fontSize: \"16px\",\n                color: COLORS.menuText,\n                backgroundColor: COLORS.menuBackground\n              }}\n              onClick={() => this.redeemTokens()}\n            />\n          </Form.Field>\n          <Message\n            error\n            header=\"Insufficient Tokens!\"\n            visible={this.state.err}\n            content={this.state.errMessage}\n          />\n        </Form>\n        <br />\n        <br />\n        </Container>\n      </Layout>\n    );\n  }\n}\n// tokens earned and withdrawable tokens\n// 37.4642\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}