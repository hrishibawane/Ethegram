{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport Link from \"../../routes\";\nimport { List, Icon, Container } from \"semantic-ui-react\";\nimport COLORS from \"../../colors\";\n\nclass UserIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      users: []\n    });\n\n    _defineProperty(this, \"getUsers\", () => {\n      return this.state.users.map((user, index) => {\n        let score = 0;\n\n        if (user.postsCount != 0) {\n          score = user.tokens / user.postsCount;\n        }\n\n        return __jsx(List.Item, {\n          key: index,\n          style: {\n            borderRadius: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: COLORS.divBackground,\n            padding: \"20px\",\n            border: \"2px solid\",\n            borderColor: COLORS.menuBackground\n          }\n        }, __jsx(List.Icon, {\n          name: \"user circle\",\n          size: \"huge\"\n        }), __jsx(List.Content, null, __jsx(List.Header, {\n          style: {\n            fontSize: \"22px\",\n            margin: \"5px\",\n            marginBottom: \"10px\",\n            color: \"#003152\"\n          }\n        }, user.name), __jsx(List.Description, {\n          style: {\n            fontSize: \"16px\",\n            marginLeft: \"5px\",\n            color: COLORS.menuBackground\n          }\n        }, __jsx(\"div\", null, __jsx(\"p\", null, user.uadd), __jsx(\"p\", null, \"Score: \", score)))));\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const userCount = await social.methods.userCount().call();\n    const users = await Promise.all(Array(parseInt(userCount)).fill().map((element, index) => {\n      return social.methods.peeps(index).call();\n    }));\n    console.log(users);\n    this.setState({\n      users: users\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Container, null, __jsx(\"h2\", null, \"Users\"), __jsx(List, null, this.getUsers())));\n  }\n\n}\n\nexport default UserIndex;","map":null,"metadata":{},"sourceType":"module"}