{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/chat/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, List, Container } from \"semantic-ui-react\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport COLORS from \"../../colors\";\n\nclass ChatRoom extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      caption: \"\",\n      prevMsgs: \"\",\n      messages: [],\n      currmsg: \"\",\n      currAcc: \"\",\n      username: \"\",\n      items: [],\n      loading: false\n    });\n\n    _defineProperty(this, \"renderMsgs\", () => {\n      const items = this.state.messages.map((msg, index) => {\n        let str = msg.split(\" *** \");\n        return {\n          key: index,\n          description: __jsx(\"div\", {\n            style: {\n              width: \"fit-content\",\n              border: \"1px solid\",\n              borderColor: COLORS.menuBackground,\n              margin: \"5px\",\n              padding: \"10px\",\n              paddingRight: \"50px\",\n              borderRadius: \"10px\",\n              color: COLORS.menuBackground\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, __jsx(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, str[0]), __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, str[1])),\n          backgroundColor: COLORS.ddbackground\n        };\n      });\n      return items;\n    });\n\n    _defineProperty(this, \"onSend\", async () => {\n      this.setState({\n        loading: true\n      });\n      let prevMsgs = this.state.prevMsgs;\n\n      if (prevMsgs.length > 0) {\n        prevMsgs += \" /// \" + this.state.username + \" *** \" + this.state.currmsg;\n      } else {\n        prevMsgs += this.state.username + \" *** \" + this.state.currmsg;\n      }\n\n      this.setState({\n        prevMsgs: prevMsgs,\n        currmsg: \"\"\n      }); // let uint8Arr = new TextEncoder(\"utf-8\").encode(prevMsgs);\n\n      let uint8Arr = await Buffer.from(prevMsgs);\n      console.log(uint8Arr);\n      const ipfshash = await ipfs.add(uint8Arr);\n      console.log(ipfshash);\n      await social.methods.setChatHash(ipfshash[0].hash).send({\n        from: this.state.currAcc\n      });\n      this.componentDidMount();\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const username = await social.methods.getUserDetails(accs[0]).call();\n    this.setState({\n      currAcc: accs[0],\n      username: username[0]\n    });\n    const hash = await social.methods.chatHash().call();\n\n    if (hash.length > 0) {\n      let data = await ipfs.files.get(hash);\n      console.log(data[0].content);\n      let msgString = new TextDecoder(\"utf-8\").decode(data[0].content);\n      console.log(msgString);\n      this.setState({\n        messages: msgString.split(\"///\"),\n        prevMsgs: msgString\n      });\n    }\n\n    const items = this.renderMsgs();\n    this.setState({\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Chat Room\"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), __jsx(List, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), __jsx(Form, {\n      onSubmit: () => this.onSend(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      fluid: true,\n      placeholder: \"Write your message...\",\n      value: this.state.currmsg,\n      onChange: event => this.setState({\n        currmsg: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), __jsx(Button, {\n      icon: \"send\",\n      style: {\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText\n      },\n      content: \"Send\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ChatRoom;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/chat/index.js"],"names":["React","Component","Layout","Form","Button","List","Container","ipfs","social","web3","Router","COLORS","ChatRoom","caption","prevMsgs","messages","currmsg","currAcc","username","items","loading","state","map","msg","index","str","split","key","description","width","border","borderColor","menuBackground","margin","padding","paddingRight","borderRadius","color","backgroundColor","ddbackground","setState","length","uint8Arr","Buffer","from","console","log","ipfshash","add","methods","setChatHash","hash","send","componentDidMount","accs","eth","getAccounts","getUserDetails","call","chatHash","data","files","get","content","msgString","TextDecoder","decode","renderMsgs","render","onSend","event","target","value","menuText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, List, Container } from \"semantic-ui-react\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport COLORS from \"../../colors\";\n\nclass ChatRoom extends Component {\n  state = {\n    caption: \"\",\n    prevMsgs: \"\",\n    messages: [],\n    currmsg: \"\",\n    currAcc: \"\",\n    username: \"\",\n    items: [],\n    loading: false\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const username = await social.methods.getUserDetails(accs[0]).call();\n    this.setState({ currAcc: accs[0], username: username[0] });\n\n    const hash = await social.methods.chatHash().call();\n    if (hash.length > 0) {\n      let data = await ipfs.files.get(hash);\n      console.log(data[0].content);\n      let msgString = new TextDecoder(\"utf-8\").decode(data[0].content);\n      console.log(msgString);\n      this.setState({ messages: msgString.split(\"///\"), prevMsgs: msgString });\n    }\n    const items = this.renderMsgs();\n    this.setState({ items: items });\n  }\n\n  renderMsgs = () => {\n    const items = this.state.messages.map((msg, index) => {\n      let str = msg.split(\" *** \");\n      return {\n        key: index,\n        description: (\n          <div\n            style={{\n              width: \"fit-content\",\n              border: \"1px solid\",\n              borderColor: COLORS.menuBackground,\n              margin: \"5px\",\n              padding: \"10px\",\n              paddingRight: \"50px\",\n              borderRadius: \"10px\",\n              color: COLORS.menuBackground\n            }}\n          >\n            <b>{str[0]}</b>\n            <p>{str[1]}</p>\n          </div>\n        ),\n        backgroundColor: COLORS.ddbackground\n      };\n    });\n    return items;\n  };\n\n  onSend = async () => {\n    this.setState({ loading: true });\n    let prevMsgs = this.state.prevMsgs;\n    if (prevMsgs.length > 0) {\n      prevMsgs += \" /// \" + this.state.username + \" *** \" + this.state.currmsg;\n    } else {\n      prevMsgs += this.state.username + \" *** \" + this.state.currmsg;\n    }\n    this.setState({ prevMsgs: prevMsgs, currmsg: \"\" });\n\n    // let uint8Arr = new TextEncoder(\"utf-8\").encode(prevMsgs);\n    let uint8Arr = await Buffer.from(prevMsgs);\n    console.log(uint8Arr);\n    const ipfshash = await ipfs.add(uint8Arr);\n    console.log(ipfshash);\n    await social.methods.setChatHash(ipfshash[0].hash).send({\n      from: this.state.currAcc\n    });\n\n    this.componentDidMount();\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <h3>Chat Room</h3>\n          <hr></hr>\n          <List items={this.state.items}></List>\n          <Form onSubmit={() => this.onSend()}>\n            <Form.Input\n              fluid\n              placeholder=\"Write your message...\"\n              value={this.state.currmsg}\n              onChange={event => this.setState({ currmsg: event.target.value })}\n            />\n            <Button\n              icon=\"send\"\n              style={{\n                backgroundColor: COLORS.menuBackground,\n                color: COLORS.menuText\n              }}\n              content=\"Send\"\n              loading={this.state.loading}\n            ></Button>\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}