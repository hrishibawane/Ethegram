{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/chat/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, List, Container } from \"semantic-ui-react\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport COLORS from \"../../colors\";\n\nvar ChatRoom = /*#__PURE__*/function (_Component) {\n  _inherits(ChatRoom, _Component);\n\n  function ChatRoom() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatRoom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      caption: \"\",\n      prevMsgs: \"\",\n      messages: [],\n      currmsg: \"\",\n      currAcc: \"\",\n      username: \"\",\n      items: [],\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMsgs\", function () {\n      var items = _this.state.messages.map(function (msg, index) {\n        var str = msg.split(\" *** \");\n        str[0] = str[0].split(' ').join('');\n\n        if (str[0] == _this.state.username) {\n          return __jsx(List.Item, {\n            key: index,\n            style: {\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding: \"10px\",\n              backgroundColor: COLORS.white,\n              borderRadius: \"5px\",\n              margin: \"10px\",\n              right: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, __jsx(List.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, __jsx(List.Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, str[0]), __jsx(List.Description, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, str[1])));\n        } else {\n          return __jsx(List.Item, {\n            key: index,\n            style: {\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              margin: \"10px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, __jsx(List.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, __jsx(List.Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, str[0]), __jsx(List.Description, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, str[1])));\n        }\n      });\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSend\", function _callee() {\n      var prevMsgs, uint8Arr, ipfshash;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              prevMsgs = _this.state.prevMsgs;\n\n              if (prevMsgs.length > 0) {\n                prevMsgs += \" /// \" + _this.state.username + \" *** \" + _this.state.currmsg;\n              } else {\n                prevMsgs += _this.state.username + \" *** \" + _this.state.currmsg;\n              }\n\n              _this.setState({\n                prevMsgs: prevMsgs,\n                currmsg: \"\"\n              }); // let uint8Arr = new TextEncoder(\"utf-8\").encode(prevMsgs);\n\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Buffer.from(prevMsgs));\n\n            case 6:\n              uint8Arr = _context.sent;\n              console.log(uint8Arr);\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(ipfs.add(uint8Arr));\n\n            case 10:\n              ipfshash = _context.sent;\n              console.log(ipfshash);\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(social.methods.setChatHash(ipfshash[0].hash).send({\n                from: _this.state.currAcc\n              }));\n\n            case 14:\n              _this.componentDidMount();\n\n              _this.setState({\n                loading: false\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accs, username, hash, data, msgString, items;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accs = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(social.methods.getUserDetails(accs[0]).call());\n\n            case 5:\n              username = _context2.sent;\n              this.setState({\n                currAcc: accs[0],\n                username: username[0]\n              });\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(social.methods.chatHash().call());\n\n            case 9:\n              hash = _context2.sent;\n\n              if (!(hash.length > 0)) {\n                _context2.next = 18;\n                break;\n              }\n\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(ipfs.files.get(hash));\n\n            case 13:\n              data = _context2.sent;\n              console.log(data[0].content);\n              msgString = new TextDecoder(\"utf-8\").decode(data[0].content);\n              console.log(msgString);\n              this.setState({\n                messages: msgString.split(\"///\"),\n                prevMsgs: msgString\n              });\n\n            case 18:\n              items = this.renderMsgs();\n              this.setState({\n                items: items\n              });\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Chat Room\"), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), __jsx(List, {\n        items: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), __jsx(Form, {\n        onSubmit: function onSubmit() {\n          return _this2.onSend();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(Form.Input, {\n        fluid: true,\n        placeholder: \"Write your message...\",\n        value: this.state.currmsg,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            currmsg: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), __jsx(Button, {\n        icon: \"send\",\n        style: {\n          backgroundColor: COLORS.menuBackground,\n          color: COLORS.menuText\n        },\n        content: \"Send\",\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ChatRoom;\n}(Component);\n\nexport default ChatRoom;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/chat/index.js"],"names":["React","Component","Layout","Form","Button","List","Container","ipfs","social","web3","Router","COLORS","ChatRoom","caption","prevMsgs","messages","currmsg","currAcc","username","items","loading","state","map","msg","index","str","split","join","width","border","padding","backgroundColor","white","borderRadius","margin","right","setState","length","Buffer","from","uint8Arr","console","log","add","ipfshash","methods","setChatHash","hash","send","componentDidMount","eth","getAccounts","accs","getUserDetails","call","chatHash","files","get","data","content","msgString","TextDecoder","decode","renderMsgs","onSend","event","target","value","menuBackground","color","menuText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, List, Container } from \"semantic-ui-react\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport COLORS from \"../../colors\";\n\nclass ChatRoom extends Component {\n  state = {\n    caption: \"\",\n    prevMsgs: \"\",\n    messages: [],\n    currmsg: \"\",\n    currAcc: \"\",\n    username: \"\",\n    items: [],\n    loading: false,\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const username = await social.methods.getUserDetails(accs[0]).call();\n    this.setState({ currAcc: accs[0], username: username[0] });\n\n    const hash = await social.methods.chatHash().call();\n    if (hash.length > 0) {\n      let data = await ipfs.files.get(hash);\n      console.log(data[0].content);\n      let msgString = new TextDecoder(\"utf-8\").decode(data[0].content);\n      console.log(msgString);\n      this.setState({ messages: msgString.split(\"///\"), prevMsgs: msgString });\n    }\n    const items = this.renderMsgs();\n    this.setState({ items: items });\n  }\n\n  renderMsgs = () => {\n    const items = this.state.messages.map((msg, index) => {\n      let str = msg.split(\" *** \");\n      str[0] = str[0].split(' ').join('');\n\n      if (str[0] == this.state.username) {\n        return (\n          <List.Item \n            key={index} \n            style={{\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding:\"10px\", \n              backgroundColor:COLORS.white,\n              borderRadius: \"5px\",\n              margin:\"10px\",\n              right: \"0px\"\n            }}\n          >\n            <List.Content>\n              <List.Header>{str[0]}</List.Header>\n              <List.Description>{str[1]}</List.Description>\n            </List.Content>\n          </List.Item>\n        );\n      } else {\n        return (\n          <List.Item \n            key={index} \n            style={{\n              width: \"fit-content\",\n              border: \"1px solid\",\n              padding:\"10px\",\n              borderRadius: \"5px\",\n              margin:\"10px\"\n            }}\n          >\n            <List.Content>\n              <List.Header>{str[0]}</List.Header>\n              <List.Description>{str[1]}</List.Description>\n            </List.Content>\n          </List.Item>\n        );\n      }\n    });\n    return items;\n  };\n\n  onSend = async () => {\n    this.setState({ loading: true });\n    let prevMsgs = this.state.prevMsgs;\n    if (prevMsgs.length > 0) {\n      prevMsgs += \" /// \" + this.state.username + \" *** \" + this.state.currmsg;\n    } else {\n      prevMsgs += this.state.username + \" *** \" + this.state.currmsg;\n    }\n    this.setState({ prevMsgs: prevMsgs, currmsg: \"\" });\n\n    // let uint8Arr = new TextEncoder(\"utf-8\").encode(prevMsgs);\n    let uint8Arr = await Buffer.from(prevMsgs);\n    console.log(uint8Arr);\n    const ipfshash = await ipfs.add(uint8Arr);\n    console.log(ipfshash);\n    await social.methods.setChatHash(ipfshash[0].hash).send({\n      from: this.state.currAcc,\n    });\n\n    this.componentDidMount();\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <h3>Chat Room</h3>\n          <hr></hr>\n          <List items={this.state.items}></List>\n          <Form onSubmit={() => this.onSend()}>\n            <Form.Input\n              fluid\n              placeholder=\"Write your message...\"\n              value={this.state.currmsg}\n              onChange={(event) =>\n                this.setState({ currmsg: event.target.value })\n              }\n            />\n            <Button\n              icon=\"send\"\n              style={{\n                backgroundColor: COLORS.menuBackground,\n                color: COLORS.menuText,\n              }}\n              content=\"Send\"\n              loading={this.state.loading}\n            ></Button>\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}