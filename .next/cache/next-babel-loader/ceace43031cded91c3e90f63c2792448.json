{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/prototype/pages/posts/new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\n\nvar swearjar = require(\"swearjar\");\n\nimport COLORS from \"../../colors\";\n\nclass NewPost extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      caption: \"\",\n      description: \"\",\n      imgBuffer: null,\n      imgIpfsHash: \"\",\n      selectedImage: \"\",\n      loading: false,\n      errMessage: \"\",\n      err: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const {\n        description,\n        caption\n      } = this.state;\n      this.setState({\n        loading: true,\n        errMessage: \"\"\n      });\n\n      try {\n        const accs = await web3.eth.getAccounts();\n        const date = new Date();\n        date.setHours(date.getHours() + 5);\n        date.setMinutes(date.getMinutes() + 30);\n        const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n        console.log(this.state.imgBuffer);\n\n        if (this.state.imgBuffer != null) {\n          const ipfsHash = await ipfs.add(this.state.imgBuffer);\n          this.setState({\n            imgIpfsHash: ipfsHash[0].hash\n          });\n        }\n\n        const th = await social.methods.createPost(caption, description, this.state.imgIpfsHash, timestamp).send({\n          from: accs[0],\n          value: web3.utils.toWei(\"0.01\", \"ether\")\n        });\n        console.log(th.transactionHash);\n        Router.pushRoute(\"/\");\n      } catch (err) {\n        this.setState({\n          err: true,\n          errMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"captureFile\", event => {\n      event.stopPropagation();\n      event.preventDefault();\n      this.setState({\n        selectedImage: URL.createObjectURL(event.target.files[0])\n      });\n      const file = event.target.files[0];\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => this.convertToBuffer(reader);\n    });\n\n    _defineProperty(this, \"convertToBuffer\", async reader => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({\n        imgBuffer: buffer\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Create New Post\"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      fluid: true,\n      label: \"Caption\",\n      value: this.state.caption,\n      onChange: event => this.setState({\n        caption: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      label: \"Upload an Image\",\n      type: \"file\",\n      onChange: event => this.captureFile(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), __jsx(Image, {\n      src: this.state.selectedImage,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), __jsx(Form.TextArea, {\n      label: \"Post Description\",\n      value: this.state.description,\n      placeholder: \"Whats Happening...\",\n      onChange: event => this.setState({\n        description: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      visible: this.state.err,\n      content: this.state.errMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), __jsx(Button, {\n      icon: \"edit\",\n      content: \"Create Post\",\n      loading: this.state.loading,\n      style: {\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NewPost;","map":{"version":3,"sources":["/home/hrishib/Desktop/prototype/pages/posts/new.js"],"names":["React","Component","Form","Button","Input","Image","Message","Layout","social","web3","ipfs","Router","swearjar","require","COLORS","NewPost","caption","description","imgBuffer","imgIpfsHash","selectedImage","loading","errMessage","err","event","preventDefault","state","setState","accs","eth","getAccounts","date","Date","setHours","getHours","setMinutes","getMinutes","timestamp","toUTCString","replace","console","log","ipfsHash","add","hash","th","methods","createPost","send","from","value","utils","toWei","transactionHash","pushRoute","message","stopPropagation","URL","createObjectURL","target","files","file","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","buffer","Buffer","result","render","onSubmit","captureFile","backgroundColor","menuBackground","color","menuText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nvar swearjar = require(\"swearjar\");\nimport COLORS from \"../../colors\";\n\nclass NewPost extends Component {\n  state = {\n    caption: \"\",\n    description: \"\",\n    imgBuffer: null,\n    imgIpfsHash: \"\",\n    selectedImage: \"\",\n    loading: false,\n    errMessage: \"\",\n    err: false\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    const { description, caption } = this.state;\n\n    this.setState({ loading: true, errMessage: \"\" });\n\n    try {\n      const accs = await web3.eth.getAccounts();\n      const date = new Date();\n      date.setHours(date.getHours() + 5);\n      date.setMinutes(date.getMinutes() + 30);\n      const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n\n      console.log(this.state.imgBuffer);\n\n      if (this.state.imgBuffer != null) {\n        const ipfsHash = await ipfs.add(this.state.imgBuffer);\n        this.setState({ imgIpfsHash: ipfsHash[0].hash });\n      }\n\n      const th = await social.methods\n        .createPost(caption, description, this.state.imgIpfsHash, timestamp)\n        .send({\n          from: accs[0],\n          value: web3.utils.toWei(\"0.01\", \"ether\")\n        });\n\n      console.log(th.transactionHash);\n      Router.pushRoute(\"/\");\n    } catch (err) {\n      this.setState({ err: true, errMessage: err.message });\n    }\n\n    this.setState({ loading: false });\n  };\n\n  captureFile = event => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.setState({\n      selectedImage: URL.createObjectURL(event.target.files[0])\n    });\n\n    const file = event.target.files[0];\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader);\n  };\n\n  convertToBuffer = async reader => {\n    const buffer = await Buffer.from(reader.result);\n\n    this.setState({ imgBuffer: buffer });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h3>Create New Post</h3>\n        <hr />\n        <br />\n        <Form onSubmit={this.onSubmit}>\n          <Form.Input\n            fluid\n            label=\"Caption\"\n            value={this.state.caption}\n            onChange={event => this.setState({ caption: event.target.value })}\n          />\n          <Form.Input\n            label=\"Upload an Image\"\n            type=\"file\"\n            onChange={event => this.captureFile(event)}\n          />\n          <Image src={this.state.selectedImage} size=\"medium\" />\n          <br />\n          <Form.TextArea\n            label=\"Post Description\"\n            value={this.state.description}\n            placeholder=\"Whats Happening...\"\n            onChange={event =>\n              this.setState({ description: event.target.value })\n            }\n          />\n\n          <Message\n            error\n            header=\"Oops!\"\n            visible={this.state.err}\n            content={this.state.errMessage}\n          />\n\n          <Button icon=\"edit\" content=\"Create Post\" loading={this.state.loading} style={{backgroundColor:COLORS.menuBackground, color:COLORS.menuText}} />\n\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}