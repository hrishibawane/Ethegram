{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, List, Container } from \"semantic-ui-react\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\nimport COLORS from \"../../colors\";\n\nvar ChatRoom = /*#__PURE__*/function (_Component) {\n  _inherits(ChatRoom, _Component);\n\n  function ChatRoom() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatRoom)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      caption: \"\",\n      prevMsgs: \"\",\n      messages: [],\n      currmsg: \"\",\n      currAcc: \"\",\n      username: \"\",\n      items: [],\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMsgs\", function () {\n      var items = _this.state.messages.map(function (msg, index) {\n        var str = msg.split(\" *** \");\n        return {\n          key: index,\n          description: __jsx(\"div\", {\n            style: {\n              width: \"fit-content\",\n              border: \"1px solid\",\n              borderColor: COLORS.menuBackground,\n              margin: \"5px\",\n              padding: \"10px\",\n              paddingRight: \"50px\",\n              borderRadius: \"10px\",\n              color: COLORS.menuBackground\n            }\n          }, __jsx(\"b\", null, str[0]), __jsx(\"p\", null, str[1])),\n          backgroundColor: COLORS.ddbackground\n        };\n      });\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSend\", function _callee() {\n      var prevMsgs, uint8Arr, ipfshash;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              prevMsgs = _this.state.prevMsgs;\n\n              if (prevMsgs.length > 0) {\n                prevMsgs += \" /// \" + _this.state.username + \" *** \" + _this.state.currmsg;\n              } else {\n                prevMsgs += _this.state.username + \" *** \" + _this.state.currmsg;\n              }\n\n              _this.setState({\n                prevMsgs: prevMsgs,\n                currmsg: \"\"\n              }); // let uint8Arr = new TextEncoder(\"utf-8\").encode(prevMsgs);\n\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Buffer.from(prevMsgs));\n\n            case 6:\n              uint8Arr = _context.sent;\n              console.log(uint8Arr);\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(ipfs.add(uint8Arr));\n\n            case 10:\n              ipfshash = _context.sent;\n              console.log(ipfshash);\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(social.methods.setChatHash(ipfshash[0].hash).send({\n                from: _this.state.currAcc\n              }));\n\n            case 14:\n              _this.componentDidMount();\n\n              _this.setState({\n                loading: false\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accs, username, hash, data, msgString, items;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accs = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(social.methods.getUserDetails(accs[0]).call());\n\n            case 5:\n              username = _context2.sent;\n              this.setState({\n                currAcc: accs[0],\n                username: username[0]\n              });\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(social.methods.chatHash().call());\n\n            case 9:\n              hash = _context2.sent;\n\n              if (!(hash.length > 0)) {\n                _context2.next = 18;\n                break;\n              }\n\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(ipfs.files.get(hash));\n\n            case 13:\n              data = _context2.sent;\n              console.log(data[0].content);\n              msgString = new TextDecoder(\"utf-8\").decode(data[0].content);\n              console.log(msgString);\n              this.setState({\n                messages: msgString.split(\"///\"),\n                prevMsgs: msgString\n              });\n\n            case 18:\n              items = this.renderMsgs();\n              this.setState({\n                items: items\n              });\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Container, null, __jsx(\"h3\", null, \"Chat Room\"), __jsx(\"hr\", null), __jsx(List, {\n        items: this.state.items\n      }), __jsx(Form, {\n        onSubmit: function onSubmit() {\n          return _this2.onSend();\n        }\n      }, __jsx(Form.Input, {\n        fluid: true,\n        placeholder: \"Write your message...\",\n        value: this.state.currmsg,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            currmsg: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        icon: \"send\",\n        style: {\n          backgroundColor: COLORS.menuBackground,\n          color: COLORS.menuText\n        },\n        content: \"Send\",\n        loading: this.state.loading\n      }))));\n    }\n  }]);\n\n  return ChatRoom;\n}(Component);\n\nexport default ChatRoom;","map":null,"metadata":{},"sourceType":"module"}