{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/profile/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message, Grid, Container, Modal, List, Header, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      tokens: 0,\n      username: \"\",\n      useraddress: \"\",\n      userposts: 0,\n      userbalance: 0.0,\n      redeemtokens: 0,\n      inputRedeem: 0,\n      err: false,\n      errMessage: \"\",\n      posts: [],\n      postCount: 0,\n      items: [],\n      newComment: \"\"\n    });\n\n    _defineProperty(this, \"hidePost\", async index => {\n      console.log(index);\n\n      try {\n        await social.methods.deletePost(index).send({\n          from: this.state.useraddress\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n\n    _defineProperty(this, \"onSubmit\", async index => {\n      console.log(index);\n      const accs = await web3.eth.getAccounts();\n      var str = this.state.username + \": \" + this.state.newComment;\n      console.log(str);\n\n      try {\n        await social.methods.postComment(index, str).send({\n          from: accs[0]\n        });\n        console.log(\"Comment Posted by \" + accs[0]);\n        this.setState({\n          caption: \"\"\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n\n    _defineProperty(this, \"renderPosts\", async () => {\n      const posts = this.state.posts;\n      console.log(this.state.postCount);\n      const items = await Promise.all(posts.map(async (post, index) => {\n        if (post.owner != this.state.useraddress) {\n          return {\n            key: index\n          };\n        }\n\n        const name = this.state.username;\n        let src;\n\n        if (post.imgIpfsHash.length > 0) {\n          const data = await ipfs.files.get(post.imgIpfsHash);\n          const bpic = this.uint8ToBase64(data[0].content);\n          src = \"data:image/png;base64,\" + bpic;\n        } else {\n          src = null;\n        }\n\n        return {\n          key: index,\n          header: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, __jsx(\"h4\", {\n            style: {\n              marginBottom: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, name), __jsx(\"p\", {\n            style: {\n              color: \"grey\",\n              marginTop: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, post.timestamp), __jsx(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, post.caption)),\n          description: __jsx(\"div\", {\n            style: {\n              border: \"2px solid grey\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              margin: \"10px\",\n              fontSize: \"15px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, post.description), __jsx(Image, {\n            style: {\n              padding: \"20px\"\n            },\n            hidden: src == null,\n            src: src,\n            fluid: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          })),\n          extra: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, __jsx(Form, {\n            onSubmit: () => this.onSubmit(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, __jsx(Form.Field, {\n            inline: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, __jsx(Input, {\n            required: true,\n            focus: true,\n            placeholder: \"Add a comment...\",\n            value: this.state.caption,\n            onChange: event => this.setState({\n              newComment: event.target.value\n            }),\n            style: {\n              width: \"70%\",\n              height: \"40px\",\n              marginRight: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }), __jsx(Button, {\n            size: \"small\",\n            color: \"linkedin\",\n            content: \"Post Comment\",\n            icon: \"edit\",\n            style: {\n              height: \"40px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }))), __jsx(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }), __jsx(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, __jsx(Button, {\n            disabled: true,\n            onClick: () => this.likePost(index),\n            color: \"red\",\n            content: \"Like\",\n            icon: \"heart\",\n            size: \"medium\",\n            label: {\n              basic: true,\n              color: \"red\",\n              content: post.likes\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }), __jsx(Modal, {\n            trigger: __jsx(Button, {\n              size: \"medium\",\n              color: \"facebook\",\n              content: \"View Comments\",\n              icon: \"comments\",\n              onClick: () => this.setState({\n                modal: true\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190\n              },\n              __self: this\n            }),\n            size: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, __jsx(Header, {\n            content: \"Comments\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }), __jsx(Modal.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }, __jsx(List, {\n            divided: true,\n            items: post.comments.split(\"/\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          })), __jsx(Modal.Actions, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, __jsx(Button, {\n            color: \"red\",\n            content: \"Close\",\n            icon: \"close\",\n            inverted: true,\n            onClick: () => this.setState({\n              modal: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }))), __jsx(Button, {\n            style: {\n              marginLeft: \"auto\"\n            },\n            content: \"Hide\",\n            color: \"black\",\n            onClick: () => this.hidePost(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }))),\n          fluid: true\n        };\n      }));\n      this.setState({\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"redeemTokens\", async () => {\n      const {\n        inputRedeem,\n        useraddress,\n        redeemtokens\n      } = this.state;\n\n      if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n        this.setState({\n          err: true,\n          errMessage: \"You do no have enough Redeemable Tokens\"\n        });\n      } else {\n        try {\n          let value = inputRedeem * 0.001;\n          value = value.toString();\n          value = web3.utils.toWei(value, \"ether\");\n          await social.methods.redeemNTokens(inputRedeem, value).send({\n            from: useraddress\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance\n    });\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(Array(parseInt(postCount)).fill().map((element, index) => {\n      return social.methods.posts(index).call();\n    }));\n    this.setState({\n      posts: posts,\n      postCount: postCount\n    });\n    this.renderPosts();\n  }\n\n  uint8ToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach(b => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.username), __jsx(\"div\", {\n      style: {\n        backgroundColor: COLORS.divBackground,\n        padding: \"10px\",\n        width: \"500px\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontWeight: \"bold\",\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.state.useraddress))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), __jsx(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Total Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.userposts,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })))), __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Total Tokens Earned\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.tokens,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"GTok\"))))), __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Redeemable Tokens\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.redeemtokens,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"GTok\")))), __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Account Balance\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.userbalance,\n      decimals: 4,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"ETH\")))))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \"Redeem Tokens\"), __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"(Note: Tokens can be redeemed if tokens are greater than 20)\"), __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      inline: true,\n      style: {\n        height: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"18px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"Tokens to redeem:\", \" \"), __jsx(Input, {\n      required: true,\n      focus: true,\n      placeholder: \"No. of Tokens\",\n      style: {\n        fontSize: \"18px\"\n      },\n      onChange: event => this.setState({\n        inputRedeem: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), __jsx(Button, {\n      icon: \"money\",\n      content: \"Redeem\",\n      style: {\n        height: \"45px\",\n        fontSize: \"16px\",\n        color: COLORS.menuText,\n        backgroundColor: COLORS.menuBackground\n      },\n      onClick: () => this.redeemTokens(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    })), __jsx(Message, {\n      error: true,\n      header: \"Insufficient Tokens!\",\n      visible: this.state.err,\n      content: this.state.errMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    })), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, \"Your Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), __jsx(Card.Group, {\n      centered: true,\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    })));\n  }\n\n} // tokens earned and withdrawable tokens\n// 37.4642\n\n\nexport default Profile;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/profile/index.js"],"names":["React","Component","Form","Button","Input","Image","Message","Grid","Container","Modal","List","Header","Card","Layout","social","web3","ipfs","Router","CountUp","COLORS","Profile","tokens","username","useraddress","userposts","userbalance","redeemtokens","inputRedeem","err","errMessage","posts","postCount","items","newComment","index","console","log","methods","deletePost","send","from","state","pushRoute","message","accs","eth","getAccounts","str","postComment","setState","caption","Promise","all","map","post","owner","key","name","src","imgIpfsHash","length","data","files","get","bpic","uint8ToBase64","content","header","marginBottom","color","marginTop","timestamp","description","border","margin","fontSize","padding","extra","onSubmit","event","target","value","width","height","marginRight","display","likePost","basic","likes","modal","comments","split","marginLeft","hidePost","fluid","toString","utils","toWei","redeemNTokens","componentDidMount","userDetails","getUserDetails","call","userAddress","userBalance","getBalance","fromWei","parseFloat","toFixed","getPostsCount","Array","parseInt","fill","element","renderPosts","buffer","binary","bytes","slice","Uint8Array","forEach","b","String","fromCharCode","window","btoa","render","menuBackground","backgroundColor","divBackground","borderRadius","borderColor","fontWeight","menuText","alignContent","justifyContent","redeemTokens"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Input,\n  Image,\n  Message,\n  Grid,\n  Container,\n  Modal,\n  List,\n  Header,\n  Card,\n} from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nclass Profile extends Component {\n  state = {\n    tokens: 0,\n    username: \"\",\n    useraddress: \"\",\n    userposts: 0,\n    userbalance: 0.0,\n    redeemtokens: 0,\n    inputRedeem: 0,\n    err: false,\n    errMessage: \"\",\n    posts: [],\n    postCount: 0,\n    items: [],\n    newComment: \"\",\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance,\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n\n    this.setState({ posts: posts, postCount: postCount });\n    this.renderPosts();\n  }\n\n  hidePost = async (index) => {\n    console.log(index);\n\n    try {\n      await social.methods.deletePost(index).send({ from: this.state.useraddress });\n      Router.pushRoute('/');\n    }\n    catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  onSubmit = async (index) => {\n    console.log(index);\n    const accs = await web3.eth.getAccounts();\n\n    var str = this.state.username + \": \" + this.state.newComment;\n    console.log(str);\n    try {\n      await social.methods.postComment(index, str).send({ from: accs[0] });\n      console.log(\"Comment Posted by \" + accs[0]);\n      this.setState({ caption: \"\" });\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  uint8ToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n\n    return window.btoa(binary);\n  }\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    const items = await Promise.all(\n      posts.map(async (post, index) => {\n        if (post.owner != this.state.useraddress) {\n          return {\n            key: index,\n          };\n        }\n\n        const name = this.state.username;\n        let src;\n        if (post.imgIpfsHash.length > 0) {\n          const data = await ipfs.files.get(post.imgIpfsHash);\n          const bpic = this.uint8ToBase64(data[0].content);\n          src = \"data:image/png;base64,\" + bpic;\n        } else {\n          src = null;\n        }\n\n        return {\n          key: index,\n          header: (\n            <div>\n              <h4 style={{ marginBottom: \"0px\" }}>{name}</h4>\n              <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n                {post.timestamp}\n              </p>\n              <h3>{post.caption}</h3>\n            </div>\n          ),\n          description: (\n            <div style={{ border: \"2px solid grey\" }}>\n              <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n                {post.description}\n              </p>\n              <Image\n                style={{ padding: \"20px\" }}\n                hidden={src == null}\n                src={src}\n                fluid\n              />\n            </div>\n          ),\n          extra: (\n            <div>\n              <Form onSubmit={() => this.onSubmit(index)}>\n                <Form.Field inline>\n                  <Input\n                    required\n                    focus\n                    placeholder=\"Add a comment...\"\n                    value={this.state.caption}\n                    onChange={(event) =>\n                      this.setState({ newComment: event.target.value })\n                    }\n                    style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n                  />\n                  <Button\n                    size=\"small\"\n                    color=\"linkedin\"\n                    content=\"Post Comment\"\n                    icon=\"edit\"\n                    style={{ height: \"40px\" }}\n                  />\n                </Form.Field>\n              </Form>\n              <br></br>\n              <div style={{display:\"flex\"}}>\n                <Button\n                  disabled\n                  onClick={() => this.likePost(index)}\n                  color=\"red\"\n                  content=\"Like\"\n                  icon=\"heart\"\n                  size=\"medium\"\n                  label={{ basic: true, color: \"red\", content: post.likes }}\n                />\n                <Modal\n                  trigger={\n                    <Button\n                      size=\"medium\"\n                      color=\"facebook\"\n                      content=\"View Comments\"\n                      icon=\"comments\"\n                      onClick={() => this.setState({ modal: true })}\n                    />\n                  }\n                  size=\"small\"\n                >\n                  <Header content=\"Comments\" />\n                  <Modal.Content>\n                    <List divided items={post.comments.split(\"/\")}></List>\n                  </Modal.Content>\n                  <Modal.Actions>\n                    <Button\n                      color=\"red\"\n                      content=\"Close\"\n                      icon=\"close\"\n                      inverted\n                      onClick={() => this.setState({ modal: false })}\n                    />\n                  </Modal.Actions>\n                </Modal>\n                <Button \n                  style={{ marginLeft:\"auto\" }}\n                  content=\"Hide\"\n                  color=\"black\"\n                  onClick={() => this.hidePost(index)}\n                />\n              </div>\n            </div>\n          ),\n          fluid: true,\n        };\n      })\n    );\n\n    this.setState({ items: items });\n  };\n\n  redeemTokens = async () => {\n    const { inputRedeem, useraddress, redeemtokens } = this.state;\n\n    if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n      this.setState({\n        err: true,\n        errMessage: \"You do no have enough Redeemable Tokens\",\n      });\n    } else {\n      try {\n        let value = inputRedeem * 0.001;\n        value = value.toString();\n        value = web3.utils.toWei(value, \"ether\");\n        await social.methods.redeemNTokens(inputRedeem, value).send({\n          from: useraddress,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <br></br>\n          <center>\n            <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n              {this.state.username}\n            </h1>\n            <div\n              style={{\n                backgroundColor: COLORS.divBackground,\n                padding: \"10px\",\n                width: \"500px\",\n                borderRadius: \"20px\",\n                border: \"1px solid\",\n                borderColor: COLORS.menuBackground,\n              }}\n            >\n              <p\n                style={{\n                  color: COLORS.menuBackground,\n                  fontWeight: \"bold\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {this.state.useraddress}\n              </p>\n            </div>\n          </center>\n          <br />\n          <br />\n          <hr />\n          <br />\n          <br />\n          <Grid centered>\n            <Grid.Row>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.menuBackground,\n                    color: COLORS.menuText,\n                    border: \"2px solid\",\n                    borderColor: COLORS.divBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                      start={0}\n                      end={this.state.userposts}\n                      duration={5}\n                    />\n                  </center>\n                </div>\n              </Grid.Column>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.divBackground,\n                    color: COLORS.menuBackground,\n                    border: \"2px solid\",\n                    borderColor: COLORS.menuBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                      start={0}\n                      end={this.state.tokens}\n                      duration={5}\n                    />\n                    <h1>GTok</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.divBackground,\n                    color: COLORS.menuBackground,\n                    border: \"2px solid\",\n                    borderColor: COLORS.menuBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Redeemable Tokens</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"10px\",\n                      }}\n                      start={0.0}\n                      end={this.state.redeemtokens}\n                      duration={5}\n                    />\n                    <h1>GTok</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.menuBackground,\n                    color: COLORS.menuText,\n                    border: \"2px solid\",\n                    borderColor: COLORS.divBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Account Balance</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"10px\",\n                      }}\n                      start={0.0}\n                      end={this.state.userbalance}\n                      decimals={4}\n                      duration={5}\n                    />\n                    <h1>ETH</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <br />\n          <br />\n          <hr />\n          <br />\n\n          <h1 style={{ color: COLORS.menuBackground }}>Redeem Tokens</h1>\n          <p style={{ color: COLORS.menuBackground, fontSize: \"15px\" }}>\n            (Note: Tokens can be redeemed if tokens are greater than 20)\n          </p>\n\n          <Form>\n            <Form.Field inline style={{ height: \"50px\" }}>\n              <label style={{ color: COLORS.menuBackground, fontSize: \"18px\" }}>\n                Tokens to redeem:{\" \"}\n              </label>\n              <Input\n                required\n                focus\n                placeholder=\"No. of Tokens\"\n                style={{ fontSize: \"18px\" }}\n                onChange={(event) =>\n                  this.setState({ inputRedeem: event.target.value })\n                }\n              />\n              <Button\n                icon=\"money\"\n                content=\"Redeem\"\n                style={{\n                  height: \"45px\",\n                  fontSize: \"16px\",\n                  color: COLORS.menuText,\n                  backgroundColor: COLORS.menuBackground,\n                }}\n                onClick={() => this.redeemTokens()}\n              />\n            </Form.Field>\n            <Message\n              error\n              header=\"Insufficient Tokens!\"\n              visible={this.state.err}\n              content={this.state.errMessage}\n            />\n          </Form>\n          <br />\n          <br />\n          <hr />\n          <h1>Your Posts</h1>\n          <br />\n          <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n// tokens earned and withdrawable tokens\n// 37.4642\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}