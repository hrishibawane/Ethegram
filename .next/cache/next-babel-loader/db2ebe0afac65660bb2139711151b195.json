{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/users/view/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport social from \"../../../ethereum/social\";\nimport { Container, Grid, Card, Form, Input, Button, Modal, Header, List } from \"semantic-ui-react\";\nimport COLORS from \"../../../colors\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\n\nvar ViewUser = /*#__PURE__*/function (_Component) {\n  _inherits(ViewUser, _Component);\n\n  function ViewUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      userAddress: \"\",\n      userName: \"\",\n      tokens: 0,\n      userPosts: 0,\n      redeemTokens: 0,\n      items: [],\n      posts: [],\n      postCount: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPosts\", function _callee2() {\n      var posts, items;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              posts = _this.state.posts;\n              console.log(_this.state.postCount);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(Promise.all(posts.map(function _callee(post, index) {\n                var name, imgSrc, vidSrc, hash, type;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(!post.valid || post.owner != _this.state.userAddress)) {\n                          _context.next = 2;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", {\n                          key: index\n                        });\n\n                      case 2:\n                        name = _this.state.userName;\n                        imgSrc = null, vidSrc = null;\n\n                        if (post.imgIpfsHash.length > 0) {\n                          hash = post.imgIpfsHash;\n                          type = hash[0];\n                          hash = hash.slice(1, hash.length);\n\n                          if (type == \"0\") {\n                            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n                          } else {\n                            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n                          }\n                        }\n\n                        console.log(post.imgIpfsHash);\n                        return _context.abrupt(\"return\", {\n                          key: index,\n                          header: __jsx(\"div\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 95\n                            },\n                            __self: this\n                          }, __jsx(\"h4\", {\n                            style: {\n                              marginBottom: \"0px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 96\n                            },\n                            __self: this\n                          }, name), __jsx(\"p\", {\n                            style: {\n                              color: \"grey\",\n                              marginTop: \"0px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 97\n                            },\n                            __self: this\n                          }, post.timestamp), __jsx(\"h3\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 100\n                            },\n                            __self: this\n                          }, post.caption)),\n                          description: __jsx(\"div\", {\n                            style: {\n                              border: \"2px solid grey\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 104\n                            },\n                            __self: this\n                          }, __jsx(\"p\", {\n                            style: {\n                              margin: \"10px\",\n                              fontSize: \"15px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 105\n                            },\n                            __self: this\n                          }, post.description), __jsx(Image, {\n                            style: {\n                              padding: \"20px\"\n                            },\n                            hidden: imgSrc == null,\n                            src: imgSrc,\n                            fluid: true,\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 108\n                            },\n                            __self: this\n                          }), __jsx(ReactPlayer, {\n                            style: {\n                              padding: \"20px\",\n                              minHeight: \"100%\"\n                            },\n                            hidden: vidSrc == null,\n                            url: vidSrc,\n                            controls: true,\n                            light: \"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\",\n                            width: \"100%\",\n                            height: \"100%\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 114\n                            },\n                            __self: this\n                          })),\n                          extra: __jsx(\"div\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 126\n                            },\n                            __self: this\n                          }, __jsx(Form, {\n                            onSubmit: function onSubmit() {\n                              return _this.onSubmit(index);\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 127\n                            },\n                            __self: this\n                          }, __jsx(Form.Field, {\n                            inline: true,\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 128\n                            },\n                            __self: this\n                          }, __jsx(Input, {\n                            required: true,\n                            focus: true,\n                            placeholder: \"Add a comment...\",\n                            value: _this.state.caption,\n                            onChange: function onChange(event) {\n                              return _this.setState({\n                                newComment: event.target.value\n                              });\n                            },\n                            style: {\n                              width: \"70%\",\n                              height: \"40px\",\n                              marginRight: \"0px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 129\n                            },\n                            __self: this\n                          }), __jsx(Button, {\n                            size: \"small\",\n                            color: \"linkedin\",\n                            content: \"Post Comment\",\n                            icon: \"edit\",\n                            style: {\n                              height: \"40px\"\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 139\n                            },\n                            __self: this\n                          }))), __jsx(\"br\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 148\n                            },\n                            __self: this\n                          }), __jsx(Button, {\n                            onClick: function onClick() {\n                              return _this.likePost(index);\n                            },\n                            color: \"red\",\n                            content: \"Like\",\n                            icon: \"heart\",\n                            size: \"medium\",\n                            label: {\n                              basic: true,\n                              color: \"red\",\n                              content: post.likes\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 149\n                            },\n                            __self: this\n                          }), __jsx(Modal, {\n                            trigger: __jsx(Button, {\n                              size: \"medium\",\n                              color: \"facebook\",\n                              content: \"View Comments\",\n                              icon: \"comments\",\n                              onClick: function onClick() {\n                                return _this.setState({\n                                  modal: true\n                                });\n                              },\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 159\n                              },\n                              __self: this\n                            }),\n                            size: \"small\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 157\n                            },\n                            __self: this\n                          }, __jsx(Header, {\n                            content: \"Comments\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 169\n                            },\n                            __self: this\n                          }), __jsx(Modal.Content, {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 170\n                            },\n                            __self: this\n                          }, __jsx(List, {\n                            divided: true,\n                            items: post.comments.split(\"/\"),\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 171\n                            },\n                            __self: this\n                          })), __jsx(Modal.Actions, {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 173\n                            },\n                            __self: this\n                          }, __jsx(Button, {\n                            color: \"red\",\n                            content: \"Close\",\n                            icon: \"close\",\n                            inverted: true,\n                            onClick: function onClick() {\n                              return _this.setState({\n                                modal: false\n                              });\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 174\n                            },\n                            __self: this\n                          })))),\n                          fluid: true\n                        });\n\n                      case 7:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, this, null, Promise);\n              })));\n\n            case 4:\n              items = _context2.sent;\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ViewUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userAddress, userDetails, postCount, posts;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userAddress = this.props.userAddress;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(social.methods.getUserDetails(userAddress).call());\n\n            case 3:\n              userDetails = _context3.sent;\n              console.log(userDetails);\n              this.setState({\n                userName: userDetails[0],\n                tokens: userDetails[1],\n                userPosts: userDetails[2],\n                redeemTokens: userDetails[3],\n                userAddress: userAddress\n              });\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(social.methods.getPostsCount().call());\n\n            case 8:\n              postCount = _context3.sent;\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(Promise.all(Array(parseInt(postCount)).fill().map(function (element, index) {\n                return social.methods.posts(index).call();\n              })));\n\n            case 11:\n              posts = _context3.sent;\n              console.log(posts);\n              this.setState({\n                posts: posts,\n                postCount: postCount\n              });\n              this.renderPosts();\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontSize: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.state.userName), __jsx(\"div\", {\n        style: {\n          backgroundColor: COLORS.divBackground,\n          padding: \"10px\",\n          width: \"500px\",\n          borderRadius: \"20px\",\n          border: \"1px solid\",\n          borderColor: COLORS.menuBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        style: {\n          color: COLORS.menuBackground,\n          fontWeight: \"bold\",\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.state.userAddress))), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), __jsx(Grid, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        width: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.menuBackground,\n          color: COLORS.menuText,\n          border: \"2px solid\",\n          borderColor: COLORS.divBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Total Posts\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        start: 0,\n        end: this.state.userPosts,\n        duration: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })))), __jsx(Grid.Column, {\n        width: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          padding: \"20px\",\n          height: \"100%\",\n          borderRadius: \"50px\",\n          backgroundColor: COLORS.divBackground,\n          color: COLORS.menuBackground,\n          border: \"2px solid\",\n          borderColor: COLORS.menuBackground\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, __jsx(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        style: {\n          fontSize: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Total Tokens Earned\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), __jsx(CountUp, {\n        style: {\n          fontSize: \"80px\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        },\n        start: 0,\n        end: this.state.tokens,\n        duration: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"GTok\"))))), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Your Posts\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), __jsx(Card.Group, {\n        centered: true,\n        items: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", {\n                userAddress: props.query.address\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return ViewUser;\n}(Component);\n\nexport default ViewUser;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/users/view/index.js"],"names":["React","Component","Layout","social","Container","Grid","Card","Form","Input","Button","Modal","Header","List","COLORS","CountUp","ReactPlayer","ViewUser","userAddress","userName","tokens","userPosts","redeemTokens","items","posts","postCount","state","console","log","Promise","all","map","post","index","valid","owner","key","name","imgSrc","vidSrc","imgIpfsHash","length","hash","type","slice","header","marginBottom","color","marginTop","timestamp","caption","description","border","margin","fontSize","padding","minHeight","extra","onSubmit","event","setState","newComment","target","value","width","height","marginRight","likePost","basic","content","likes","modal","comments","split","fluid","props","methods","getUserDetails","call","userDetails","getPostsCount","Array","parseInt","fill","element","renderPosts","menuBackground","backgroundColor","divBackground","borderRadius","borderColor","fontWeight","menuText","alignContent","justifyContent","query","address"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport social from \"../../../ethereum/social\";\nimport {\n  Container,\n  Grid,\n  Card,\n  Form,\n  Input,\n  Button,\n  Modal,\n  Header,\n  List,\n} from \"semantic-ui-react\";\nimport COLORS from \"../../../colors\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\n\nclass ViewUser extends Component {\n  state = {\n    userAddress: \"\",\n    userName: \"\",\n    tokens: 0,\n    userPosts: 0,\n    redeemTokens: 0,\n    items: [],\n    posts: [],\n    postCount: 0,\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userAddress: props.query.address,\n    };\n  }\n\n  async componentDidMount() {\n    const userAddress = this.props.userAddress;\n\n    const userDetails = await social.methods.getUserDetails(userAddress).call();\n    console.log(userDetails);\n\n    this.setState({\n      userName: userDetails[0],\n      tokens: userDetails[1],\n      userPosts: userDetails[2],\n      redeemTokens: userDetails[3],\n      userAddress: userAddress,\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n    console.log(posts);\n    this.setState({ posts: posts, postCount: postCount });\n    this.renderPosts();\n  }\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    const items = await Promise.all(\n      posts.map(async (post, index) => {\n        if (!post.valid || post.owner != this.state.userAddress) {\n          return {\n            key: index,\n          };\n        }\n        const name = this.state.userName;\n        let imgSrc = null,\n          vidSrc = null;\n        if (post.imgIpfsHash.length > 0) {\n          let hash = post.imgIpfsHash;\n          let type = hash[0];\n          hash = hash.slice(1, hash.length);\n\n          if (type == \"0\") {\n            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n          } else {\n            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n          }\n        }\n\n        console.log(post.imgIpfsHash);\n\n        return {\n          key: index,\n          header: (\n            <div>\n              <h4 style={{ marginBottom: \"0px\" }}>{name}</h4>\n              <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n                {post.timestamp}\n              </p>\n              <h3>{post.caption}</h3>\n            </div>\n          ),\n          description: (\n            <div style={{ border: \"2px solid grey\" }}>\n              <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n                {post.description}\n              </p>\n              <Image\n                style={{ padding: \"20px\" }}\n                hidden={imgSrc == null}\n                src={imgSrc}\n                fluid\n              />\n              <ReactPlayer\n                style={{ padding: \"20px\", minHeight: \"100%\" }}\n                hidden={vidSrc == null}\n                url={vidSrc}\n                controls={true}\n                light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n                width=\"100%\"\n                height=\"100%\"\n              />\n            </div>\n          ),\n          extra: (\n            <div>\n              <Form onSubmit={() => this.onSubmit(index)}>\n                <Form.Field inline>\n                  <Input\n                    required\n                    focus\n                    placeholder=\"Add a comment...\"\n                    value={this.state.caption}\n                    onChange={(event) =>\n                      this.setState({ newComment: event.target.value })\n                    }\n                    style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n                  />\n                  <Button\n                    size=\"small\"\n                    color=\"linkedin\"\n                    content=\"Post Comment\"\n                    icon=\"edit\"\n                    style={{ height: \"40px\" }}\n                  />\n                </Form.Field>\n              </Form>\n              <br></br>\n              <Button\n                onClick={() => this.likePost(index)}\n                color=\"red\"\n                content=\"Like\"\n                icon=\"heart\"\n                size=\"medium\"\n                label={{ basic: true, color: \"red\", content: post.likes }}\n              />\n              <Modal\n                trigger={\n                  <Button\n                    size=\"medium\"\n                    color=\"facebook\"\n                    content=\"View Comments\"\n                    icon=\"comments\"\n                    onClick={() => this.setState({ modal: true })}\n                  />\n                }\n                size=\"small\"\n              >\n                <Header content=\"Comments\" />\n                <Modal.Content>\n                  <List divided items={post.comments.split(\"/\")}></List>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    color=\"red\"\n                    content=\"Close\"\n                    icon=\"close\"\n                    inverted\n                    onClick={() => this.setState({ modal: false })}\n                  />\n                </Modal.Actions>\n              </Modal>\n            </div>\n          ),\n          fluid: true,\n        };\n      })\n    );\n\n    // this.setState({ items: items });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <br></br>\n          <center>\n            <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n              {this.state.userName}\n            </h1>\n            <div\n              style={{\n                backgroundColor: COLORS.divBackground,\n                padding: \"10px\",\n                width: \"500px\",\n                borderRadius: \"20px\",\n                border: \"1px solid\",\n                borderColor: COLORS.menuBackground,\n              }}\n            >\n              <p\n                style={{\n                  color: COLORS.menuBackground,\n                  fontWeight: \"bold\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {this.state.userAddress}\n              </p>\n            </div>\n          </center>\n          <br />\n          <br />\n          <hr />\n          <br />\n          <br />\n          <Grid centered>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground,\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                    start={0}\n                    end={this.state.userPosts}\n                    duration={5}\n                  />\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground,\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                    start={0}\n                    end={this.state.tokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid>\n          <br />\n          <br />\n          <hr />\n          <h1>Your Posts</h1>\n          <br />\n          <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ViewUser;\n"]},"metadata":{},"sourceType":"module"}