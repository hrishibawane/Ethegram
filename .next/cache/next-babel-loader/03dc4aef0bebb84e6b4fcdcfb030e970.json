{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Card, Button, Grid, Image, Form, Modal, Header, List, Input } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport social from \"../ethereum/social\";\nimport web3 from \"../ethereum/web3\";\nimport { Link, Router } from \"../routes\";\nimport ipfs from \"../ethereum/ipfs\";\nimport COLORS from \"../colors\";\n\nconst NewsAPI = require(\"newsapi\");\n\nconst newsapi = new NewsAPI(\"9596f3ac23f5400a981fa2a3e2f8411b\");\n\nclass SocialIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currAccount: \"\",\n      posts: [],\n      postCount: 0,\n      items: [],\n      images: [],\n      newComment: \"\",\n      disabled: false,\n      loading: false,\n      name: \"\",\n      index: 0,\n      username: \"unknown\",\n      done: false,\n      modal: false,\n      articles: [],\n      news: []\n    });\n\n    _defineProperty(this, \"onSubmit\", async index => {\n      console.log(index);\n      const accs = await web3.eth.getAccounts();\n      var str = this.state.username + \": \" + this.state.newComment;\n      console.log(str);\n\n      try {\n        await social.methods.postComment(index, str).send({\n          from: accs[0]\n        });\n        console.log(\"Comment Posted by \" + accs[0]);\n        this.setState({\n          caption: \"\"\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n\n    _defineProperty(this, \"likePost\", async index => {\n      console.log(index);\n\n      try {\n        await social.methods.likePost(index).send({\n          from: this.state.currAccount\n        });\n        this.setState({\n          done: true\n        });\n      } catch (err) {}\n    });\n\n    _defineProperty(this, \"signIn\", async () => {\n      this.setState({\n        loading: true\n      });\n      await social.methods.signIn(this.state.name).send({\n        from: this.state.currAccount,\n        value: web3.utils.toWei(\"0.02\", \"ether\")\n      });\n      this.setState({\n        loading: false,\n        disabled: true\n      });\n    });\n\n    _defineProperty(this, \"renderArticles\", () => {\n      const articles = this.state.articles;\n      const news = articles.map((article, index) => {\n        return {\n          key: index,\n          header: __jsx(\"h4\", null, article.title),\n          description: __jsx(\"p\", {\n            style: {\n              fontSize: \"15px\"\n            }\n          }, article.description),\n          extra: __jsx(\"a\", {\n            href: article.url,\n            target: \"_blank\",\n            style: {\n              color: \"blue\"\n            }\n          }, article.url),\n          fluid: true,\n          style: {\n            backgroundColor: COLORS.background\n          }\n        };\n      });\n      this.setState({\n        news: news\n      });\n    });\n\n    _defineProperty(this, \"renderPosts\", async () => {\n      const posts = this.state.posts;\n      console.log(this.state.postCount);\n      const items = await Promise.all(posts.map(async (post, index) => {\n        const name = await social.methods.getUserDetails(post.owner).call();\n        let src;\n\n        if (post.imgIpfsHash.length > 0) {\n          const data = await ipfs.files.get(post.imgIpfsHash);\n          const bpic = this.uint8ToBase64(data[0].content);\n          src = \"data:image/png;base64,\" + bpic;\n        } else {\n          src = null;\n        }\n\n        return {\n          key: index,\n          header: __jsx(\"div\", null, __jsx(\"h4\", {\n            style: {\n              marginBottom: \"0px\"\n            }\n          }, name[0]), __jsx(\"p\", {\n            style: {\n              color: \"grey\",\n              marginTop: \"0px\"\n            }\n          }, post.timestamp), __jsx(\"h3\", null, post.caption)),\n          description: __jsx(\"div\", {\n            style: {\n              border: \"2px solid grey\"\n            }\n          }, __jsx(\"p\", {\n            style: {\n              margin: \"10px\",\n              fontSize: \"15px\"\n            }\n          }, post.description), __jsx(Image, {\n            style: {\n              padding: \"20px\"\n            },\n            hidden: src == null,\n            src: src,\n            fluid: true\n          })),\n          extra: __jsx(\"div\", null, __jsx(Form, {\n            onSubmit: () => this.onSubmit(index)\n          }, __jsx(Form.Field, {\n            inline: true\n          }, __jsx(Input, {\n            focus: true,\n            placeholder: \"Add a comment...\",\n            value: this.state.caption,\n            onChange: event => this.setState({\n              newComment: event.target.value\n            }),\n            style: {\n              width: \"70%\",\n              height: \"40px\",\n              marginRight: \"0px\"\n            }\n          }), __jsx(Button, {\n            size: \"small\",\n            color: \"linkedin\",\n            content: \"Post Comment\",\n            icon: \"edit\",\n            style: {\n              height: \"40px\"\n            }\n          }))), __jsx(\"br\", null), __jsx(Button, {\n            onClick: () => this.likePost(index),\n            color: \"red\",\n            content: \"Like\",\n            icon: \"heart\",\n            size: \"medium\",\n            label: {\n              basic: true,\n              color: \"red\",\n              content: post.likes\n            }\n          }), __jsx(Modal, {\n            trigger: __jsx(Button, {\n              size: \"medium\",\n              color: \"facebook\",\n              content: \"View Comments\",\n              icon: \"comments\",\n              onClick: () => this.setState({\n                modal: true\n              })\n            }),\n            size: \"small\"\n          }, __jsx(Header, {\n            content: \"Comments\"\n          }), __jsx(Modal.Content, null, __jsx(List, {\n            divided: true,\n            items: post.comments.split(\"/\")\n          })), __jsx(Modal.Actions, null, __jsx(Button, {\n            color: \"red\",\n            content: \"Close\",\n            icon: \"close\",\n            inverted: true,\n            onClick: () => this.setState({\n              modal: false\n            })\n          })))),\n          fluid: true\n        };\n      }));\n      this.setState({\n        items: items\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await social.methods.isUser(accs[0]).call();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const username = userDetails[0];\n    let balance = await social.methods.getContractBalance().call();\n    balance = web3.utils.fromWei(balance, \"ether\");\n    console.log(accs[0], username);\n    console.log(\"Balance: \" + balance);\n    this.setState({\n      disabled: isUser,\n      currAccount: accs[0],\n      username: username\n    });\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(Array(parseInt(postCount)).fill().map((element, index) => {\n      return social.methods.posts(index).call();\n    }));\n    this.setState({\n      posts: posts,\n      postCount: postCount\n    });\n    this.renderPosts();\n    newsapi.v2.topHeadlines({\n      language: \"en\",\n      country: \"in\"\n    }).then(response => {\n      console.log(response.articles);\n      this.setState({\n        articles: response.articles\n      });\n      this.renderArticles();\n    });\n  }\n\n  uint8ToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach(b => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h2\", null, \"Posts\"), __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 11,\n      style: {\n        marginRight: \"10px\",\n        paddingRight: \"20px\"\n      }\n    }, __jsx(Card.Group, {\n      centered: true,\n      items: this.state.items\n    })), __jsx(Grid.Column, {\n      width: 4,\n      textAlign: \"left\",\n      style: {\n        marginLeft: \"40px\",\n        marginTop: \"15px\",\n        border: \"1px solid #A9A9A9\",\n        borderRadius: \"5px\",\n        backgroundColor: COLORS.white\n      }\n    }, __jsx(Form, {\n      style: {\n        backgroundColor: COLORS.background,\n        padding: \"10px\",\n        border: \"1px solid #A9A9A9\"\n      }\n    }, __jsx(\"label\", null, __jsx(\"h4\", {\n      style: {\n        color: COLORS.menuBackground\n      }\n    }, \"Name:\")), __jsx(Form.Input, {\n      style: {\n        marginTop: \"5px\"\n      },\n      disabled: this.state.disabled,\n      fluid: true,\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    }), __jsx(Button, {\n      size: \"medium\",\n      content: \"Sign In\",\n      onClick: this.signIn,\n      style: {\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        width: \"100%\"\n      },\n      disabled: this.state.disabled,\n      loading: this.state.loading\n    })), __jsx(\"br\", null), __jsx(Link, {\n      route: \"/profile\"\n    }, __jsx(\"a\", {\n      style: {\n        color: COLORS.menuBackground\n      }\n    }, __jsx(\"h4\", null, \"Signed in as \", this.state.username))), __jsx(\"br\", null), __jsx(Link, {\n      route: \"/posts/new\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      content: \"Create New Post\",\n      size: \"medium\",\n      style: {\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        width: \"100%\"\n      },\n      disabled: !this.state.disabled\n    }))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"h3\", {\n      style: {\n        marginBottom: \"0px\",\n        color: COLORS.menuBackground\n      }\n    }, \"News Updates\"), __jsx(\"p\", {\n      style: {\n        color: \"grey\",\n        marginBottom: \"20px\"\n      }\n    }, \"Powered by newsapi.org\"), __jsx(Card.Group, {\n      items: this.state.news\n    }))));\n  }\n\n}\n\nexport default SocialIndex;","map":null,"metadata":{},"sourceType":"module"}