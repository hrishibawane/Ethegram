{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/Ethegram/pages/profile/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message, Grid, Container, Modal, List, Header, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      tokens: 0,\n      username: \"\",\n      useraddress: \"\",\n      userposts: 0,\n      userbalance: 0.0,\n      redeemtokens: 0,\n      inputRedeem: 0,\n      err: false,\n      errMessage: \"\",\n      posts: [],\n      postCount: 0,\n      items: []\n    });\n\n    _defineProperty(this, \"renderPosts\", async () => {\n      const posts = this.state.posts;\n      console.log(this.state.postCount);\n      const items = await Promise.all(posts.map(async (post, index) => {\n        if (post.owner != this.state.useraddress) {\n          return {\n            key: index\n          };\n        }\n\n        const name = this.state.username;\n        let src;\n\n        if (post.imgIpfsHash.length > 0) {\n          const data = await ipfs.files.get(post.imgIpfsHash);\n          const bpic = this.uint8ToBase64(data[0].content);\n          src = \"data:image/png;base64,\" + bpic;\n        } else {\n          src = null;\n        }\n\n        return {\n          key: index,\n          header: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, __jsx(\"h4\", {\n            style: {\n              marginBottom: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, name), __jsx(\"p\", {\n            style: {\n              color: \"grey\",\n              marginTop: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, post.timestamp), __jsx(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, post.caption)),\n          description: __jsx(\"div\", {\n            style: {\n              border: \"2px solid grey\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              margin: \"10px\",\n              fontSize: \"15px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, post.description), __jsx(Image, {\n            style: {\n              padding: \"20px\"\n            },\n            hidden: src == null,\n            src: src,\n            fluid: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          })),\n          extra: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, __jsx(Form, {\n            onSubmit: () => this.onSubmit(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, __jsx(Form.Field, {\n            inline: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, __jsx(Input, {\n            focus: true,\n            placeholder: \"Add a comment...\",\n            value: this.state.caption,\n            onChange: event => this.setState({\n              newComment: event.target.value\n            }),\n            style: {\n              width: \"70%\",\n              height: \"40px\",\n              marginRight: \"0px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }), __jsx(Button, {\n            size: \"small\",\n            color: \"linkedin\",\n            content: \"Post Comment\",\n            icon: \"edit\",\n            style: {\n              height: \"40px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }))), __jsx(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }), __jsx(Button, {\n            onClick: () => this.likePost(index),\n            color: \"red\",\n            content: \"Like\",\n            icon: \"heart\",\n            size: \"medium\",\n            label: {\n              basic: true,\n              color: \"red\",\n              content: post.likes\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }), __jsx(Modal, {\n            trigger: __jsx(Button, {\n              size: \"medium\",\n              color: \"facebook\",\n              content: \"View Comments\",\n              icon: \"comments\",\n              onClick: () => this.setState({\n                modal: true\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }),\n            size: \"small\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, __jsx(Header, {\n            content: \"Comments\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }), __jsx(Modal.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, __jsx(List, {\n            divided: true,\n            items: post.comments.split(\"/\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          })), __jsx(Modal.Actions, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, __jsx(Button, {\n            color: \"red\",\n            content: \"Close\",\n            icon: \"close\",\n            inverted: true,\n            onClick: () => this.setState({\n              modal: false\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          })))),\n          fluid: true\n        };\n      }));\n      this.setState({\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"redeemTokens\", async () => {\n      const {\n        inputRedeem,\n        useraddress,\n        redeemtokens\n      } = this.state;\n\n      if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n        this.setState({\n          err: true,\n          errMessage: \"You do no have enough Redeemable Tokens\"\n        });\n      } else {\n        try {\n          let value = inputRedeem * 0.001;\n          value = value.toString();\n          value = web3.utils.toWei(value, \"ether\");\n          await social.methods.redeemNTokens(inputRedeem, value).send({\n            from: useraddress\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance\n    });\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(Array(parseInt(postCount)).fill().map((element, index) => {\n      return social.methods.posts(index).call();\n    }));\n    this.setState({\n      posts: posts,\n      postCount: postCount\n    });\n    this.renderPosts();\n  }\n\n  uint8ToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach(b => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.state.username), __jsx(\"div\", {\n      style: {\n        backgroundColor: COLORS.divBackground,\n        padding: \"10px\",\n        width: \"500px\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontWeight: \"bold\",\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.state.useraddress))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), __jsx(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Total Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.userposts,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })))), __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Total Tokens Earned\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.tokens,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"GTok\"))))), __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Redeemable Tokens\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.redeemtokens,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"GTok\")))), __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, __jsx(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Account Balance\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.userbalance,\n      decimals: 4,\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"ETH\")))))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Redeem Tokens\"), __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"(Note: Tokens can be redeemed if tokens are greater than 20)\"), __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      inline: true,\n      style: {\n        height: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"18px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Tokens to redeem:\", \" \"), __jsx(Input, {\n      required: true,\n      focus: true,\n      placeholder: \"No. of Tokens\",\n      style: {\n        fontSize: \"18px\"\n      },\n      onChange: event => this.setState({\n        inputRedeem: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), __jsx(Button, {\n      icon: \"money\",\n      content: \"Redeem\",\n      style: {\n        height: \"45px\",\n        fontSize: \"16px\",\n        color: COLORS.menuText,\n        backgroundColor: COLORS.menuBackground\n      },\n      onClick: () => this.redeemTokens(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    })), __jsx(Message, {\n      error: true,\n      header: \"Insufficient Tokens!\",\n      visible: this.state.err,\n      content: this.state.errMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    })), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Your Posts\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }), __jsx(Card.Group, {\n      centered: true,\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    })));\n  }\n\n} // tokens earned and withdrawable tokens\n// 37.4642\n\n\nexport default Profile;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/profile/index.js"],"names":["React","Component","Form","Button","Input","Image","Message","Grid","Container","Modal","List","Header","Card","Layout","social","web3","ipfs","Router","CountUp","COLORS","Profile","tokens","username","useraddress","userposts","userbalance","redeemtokens","inputRedeem","err","errMessage","posts","postCount","items","state","console","log","Promise","all","map","post","index","owner","key","name","src","imgIpfsHash","length","data","files","get","bpic","uint8ToBase64","content","header","marginBottom","color","marginTop","timestamp","caption","description","border","margin","fontSize","padding","extra","onSubmit","event","setState","newComment","target","value","width","height","marginRight","likePost","basic","likes","modal","comments","split","fluid","toString","utils","toWei","methods","redeemNTokens","send","from","componentDidMount","accs","eth","getAccounts","userDetails","getUserDetails","call","userAddress","userBalance","getBalance","fromWei","parseFloat","toFixed","getPostsCount","Array","parseInt","fill","element","renderPosts","buffer","binary","bytes","slice","Uint8Array","forEach","b","String","fromCharCode","window","btoa","render","menuBackground","backgroundColor","divBackground","borderRadius","borderColor","fontWeight","menuText","alignContent","justifyContent","redeemTokens"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Input,\n  Image,\n  Message,\n  Grid,\n  Container,\n  Modal,\n  List,\n  Header,\n  Card\n} from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport COLORS from \"../../colors\";\n\nclass Profile extends Component {\n  state = {\n    tokens: 0,\n    username: \"\",\n    useraddress: \"\",\n    userposts: 0,\n    userbalance: 0.0,\n    redeemtokens: 0,\n    inputRedeem: 0,\n    err: false,\n    errMessage: \"\",\n    posts: [],\n    postCount: 0,\n    items: []\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n\n    this.setState({ posts: posts, postCount: postCount });\n    this.renderPosts();\n  }\n\n  uint8ToBase64(buffer) {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n\n    bytes.forEach(b => (binary += String.fromCharCode(b)));\n\n    return window.btoa(binary);\n  }\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    const items = await Promise.all(\n      posts.map(async (post, index) => {\n\n        if(post.owner != this.state.useraddress) {\n          return {\n            key: index\n          };\n        }\n\n        const name = this.state.username;\n        let src;\n        if (post.imgIpfsHash.length > 0) {\n          const data = await ipfs.files.get(post.imgIpfsHash);\n          const bpic = this.uint8ToBase64(data[0].content);\n          src = \"data:image/png;base64,\" + bpic;\n        } else {\n          src = null;\n        }\n\n        return {\n          key: index,\n          header: (\n            <div>\n              <h4 style={{ marginBottom: \"0px\" }}>{name}</h4>\n              <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n                {post.timestamp}\n              </p>\n              <h3>{post.caption}</h3>\n            </div>\n          ),\n          description: (\n            <div style={{ border: \"2px solid grey\" }}>\n              <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n                {post.description}\n              </p>\n              <Image\n                style={{ padding: \"20px\" }}\n                hidden={src == null}\n                src={src}\n                fluid\n              />\n            </div>\n          ),\n          extra: (\n            <div>\n              <Form onSubmit={() => this.onSubmit(index)}>\n                <Form.Field inline>\n                  <Input\n                    focus\n                    placeholder=\"Add a comment...\"\n                    value={this.state.caption}\n                    onChange={event =>\n                      this.setState({ newComment: event.target.value })\n                    }\n                    style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n                  />\n                  <Button\n                    size=\"small\"\n                    color=\"linkedin\"\n                    content=\"Post Comment\"\n                    icon=\"edit\"\n                    style={{ height: \"40px\" }}\n                  />\n                </Form.Field>\n              </Form>\n              <br></br>\n              <Button\n                onClick={() => this.likePost(index)}\n                color=\"red\"\n                content=\"Like\"\n                icon=\"heart\"\n                size=\"medium\"\n                label={{ basic: true, color: \"red\", content: post.likes }}\n              />\n              <Modal\n                trigger={\n                  <Button\n                    size=\"medium\"\n                    color=\"facebook\"\n                    content=\"View Comments\"\n                    icon=\"comments\"\n                    onClick={() => this.setState({ modal: true })}\n                  />\n                }\n                size=\"small\"\n              >\n                <Header content=\"Comments\" />\n                <Modal.Content>\n                  <List divided items={post.comments.split(\"/\")}></List>\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    color=\"red\"\n                    content=\"Close\"\n                    icon=\"close\"\n                    inverted\n                    onClick={() => this.setState({ modal: false })}\n                  />\n                </Modal.Actions>\n              </Modal>\n            </div>\n          ),\n          fluid: true\n        };\n      })\n    );\n\n    this.setState({ items: items });\n  }\n\n  redeemTokens = async () => {\n    const { inputRedeem, useraddress, redeemtokens } = this.state;\n\n    if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n      this.setState({\n        err: true,\n        errMessage: \"You do no have enough Redeemable Tokens\"\n      });\n    } else {\n      try {\n        let value = inputRedeem * 0.001;\n        value = value.toString();\n        value = web3.utils.toWei(value, \"ether\");\n        await social.methods.redeemNTokens(inputRedeem, value).send({\n          from: useraddress\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n        <br></br>\n        <center>\n          <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n            {this.state.username}\n          </h1>\n          <div\n            style={{\n              backgroundColor: COLORS.divBackground,\n              padding: \"10px\",\n              width: \"500px\",\n              borderRadius: \"20px\",\n              border:\"1px solid\",\n              borderColor:COLORS.menuBackground\n            }}\n          >\n            <p style={{ color: COLORS.menuBackground, fontWeight:\"bold\", fontSize: \"15px\" }}>\n              {this.state.useraddress}\n            </p>\n          </div>\n        </center>\n        <br />\n        <br />\n        <hr />\n        <br />\n        <br />\n        <Grid centered>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                    start={0}\n                    end={this.state.userposts}\n                    duration={5}\n                  />\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                    start={0}\n                    end={this.state.tokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.divBackground,\n                  color: COLORS.menuBackground,\n                  border: \"2px solid\",\n                  borderColor: COLORS.menuBackground\n                }}\n              >\n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Redeemable Tokens</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                      margin: \"10px\"\n                    }}\n                    start={0.0}\n                    end={this.state.redeemtokens}\n                    duration={5}\n                  />\n                  <h1>GTok</h1>\n                </center>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <div\n                style={{\n                  padding: \"20px\",\n                  height: \"100%\",\n                  borderRadius: \"50px\",\n                  backgroundColor: COLORS.menuBackground,\n                  color: COLORS.menuText,\n                  border: \"2px solid\",\n                  borderColor: COLORS.divBackground\n                }}\n              >\n                \n                <center>\n                  <h1 style={{ fontSize: \"40px\" }}>Account Balance</h1>\n                  <br />\n                  <br />\n                  <CountUp\n                    style={{\n                      fontSize: \"80px\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                      margin: \"10px\"\n                    }}\n                    start={0.0}\n                    end={this.state.userbalance}\n                    decimals={4}\n                    duration={5}\n                  />\n                  <h1>ETH</h1>\n                </center>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <br />\n        <br />\n        <hr />\n        <br />\n\n        <h1 style={{ color: COLORS.menuBackground }}>Redeem Tokens</h1>\n        <p style={{ color: COLORS.menuBackground, fontSize: \"15px\" }}>\n          (Note: Tokens can be redeemed if tokens are greater than 20)\n        </p>\n\n        <Form>\n          <Form.Field inline style={{ height: \"50px\" }}>\n            <label style={{ color: COLORS.menuBackground, fontSize: \"18px\" }}>\n              Tokens to redeem:{\" \"}\n            </label>\n            <Input\n              required\n              focus\n              placeholder=\"No. of Tokens\"\n              style={{ fontSize: \"18px\" }}\n              onChange={event =>\n                this.setState({ inputRedeem: event.target.value })\n              }\n            />\n            <Button\n              icon=\"money\"\n              content=\"Redeem\"\n              style={{\n                height: \"45px\",\n                fontSize: \"16px\",\n                color: COLORS.menuText,\n                backgroundColor: COLORS.menuBackground\n              }}\n              onClick={() => this.redeemTokens()}\n            />\n          </Form.Field>\n          <Message\n            error\n            header=\"Insufficient Tokens!\"\n            visible={this.state.err}\n            content={this.state.errMessage}\n          />\n        </Form>\n        <br />\n        <br />\n        <hr />\n        <h1>Your Posts</h1>\n        <br />\n        <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n// tokens earned and withdrawable tokens\n// 37.4642\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}