{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Image, Message, Grid, Container, Modal, List, Header, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\nimport COLORS from \"../../colors\";\nimport { CustButton } from \"../../components/styledComponents\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      tokens: 0,\n      username: \"\",\n      useraddress: \"\",\n      userposts: 0,\n      userbalance: 0.0,\n      redeemtokens: 0,\n      inputRedeem: 0,\n      err: false,\n      errMessage: \"\",\n      posts: [],\n      postCount: 0,\n      items: [],\n      newComment: \"\"\n    });\n\n    _defineProperty(this, \"hidePost\", async index => {\n      console.log(index);\n\n      try {\n        await social.methods.deletePost(index).send({\n          from: this.state.useraddress\n        });\n        Router.pushRoute(\"/\");\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n\n    _defineProperty(this, \"onSubmit\", async index => {\n      console.log(index);\n      const accs = await web3.eth.getAccounts();\n      var str = this.state.username + \": \" + this.state.newComment;\n      console.log(str);\n\n      try {\n        await social.methods.postComment(index, str).send({\n          from: accs[0]\n        });\n        console.log(\"Comment Posted by \" + accs[0]);\n        this.setState({\n          caption: \"\"\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n\n    _defineProperty(this, \"renderPosts\", async () => {\n      const posts = this.state.posts;\n      console.log(this.state.postCount);\n      const items = await Promise.all(posts.map(async (post, index) => {\n        if (!post.valid || post.owner != this.state.useraddress) {\n          return {\n            key: index\n          };\n        }\n\n        const name = await social.methods.getUserDetails(post.owner).call();\n        let imgSrc = null,\n            vidSrc = null;\n\n        if (post.imgIpfsHash.length > 0) {\n          let hash = post.imgIpfsHash;\n          let type = hash[0];\n          hash = hash.slice(1, hash.length);\n\n          if (type == \"0\") {\n            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n          } else {\n            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n          }\n        }\n\n        console.log(post.imgIpfsHash);\n        return {\n          key: index,\n          header: __jsx(\"div\", null, __jsx(\"h4\", {\n            style: {\n              marginBottom: \"0px\"\n            }\n          }, name[0]), __jsx(\"p\", {\n            style: {\n              color: \"grey\",\n              marginTop: \"0px\"\n            }\n          }, post.timestamp), __jsx(\"h3\", null, post.caption)),\n          description: __jsx(\"div\", {\n            style: {\n              border: \"2px solid grey\"\n            }\n          }, __jsx(\"p\", {\n            style: {\n              margin: \"10px\",\n              fontSize: \"15px\"\n            }\n          }, post.description), __jsx(Image, {\n            style: {\n              padding: \"20px\"\n            },\n            hidden: imgSrc == null,\n            src: imgSrc,\n            fluid: true\n          }), __jsx(ReactPlayer, {\n            style: {\n              padding: \"20px\",\n              minHeight: \"100%\"\n            },\n            hidden: vidSrc == null,\n            url: vidSrc,\n            controls: true // light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n            ,\n            width: \"100%\",\n            height: \"100%\"\n          })),\n          extra: __jsx(\"div\", null, __jsx(Form, {\n            onSubmit: () => this.onSubmit(index)\n          }, __jsx(Form.Field, {\n            inline: true\n          }, __jsx(Input, {\n            required: true,\n            focus: true,\n            placeholder: \"Add a comment...\",\n            value: this.state.caption,\n            onChange: event => this.setState({\n              newComment: event.target.value\n            }),\n            style: {\n              width: \"70%\",\n              height: \"40px\",\n              marginRight: \"0px\"\n            }\n          }), __jsx(CustButton, {\n            size: \"small\",\n            color: \"linkedin\",\n            content: \"Post Comment\",\n            icon: \"edit\",\n            style: {\n              height: \"40px\"\n            }\n          }))), __jsx(\"br\", null), __jsx(CustButton, {\n            onClick: () => this.likePost(index),\n            color: \"red\",\n            content: \"Like\",\n            icon: \"heart\",\n            size: \"medium\",\n            label: {\n              basic: true,\n              color: \"red\",\n              content: post.likes\n            }\n          }), __jsx(Modal, {\n            trigger: __jsx(CustButton, {\n              size: \"medium\",\n              color: \"facebook\",\n              content: \"View Comments\",\n              icon: \"comments\",\n              onClick: () => this.setState({\n                modal: true\n              })\n            }),\n            size: \"small\"\n          }, __jsx(Header, {\n            content: \"Comments\"\n          }), __jsx(Modal.Content, null, __jsx(List, {\n            divided: true,\n            items: post.comments.split(\"/\")\n          })), __jsx(Modal.Actions, null, __jsx(CustButton, {\n            color: \"red\",\n            content: \"Close\",\n            icon: \"close\",\n            inverted: true,\n            onClick: () => this.setState({\n              modal: false\n            })\n          }))), __jsx(CustButton, {\n            style: {\n              marginLeft: \"auto\"\n            },\n            content: \"Hide\",\n            color: \"black\",\n            onClick: () => this.hidePost(index)\n          })),\n          fluid: true\n        };\n      }));\n      this.setState({\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"redeemTokens\", async () => {\n      const {\n        inputRedeem,\n        useraddress,\n        redeemtokens\n      } = this.state;\n\n      if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n        this.setState({\n          err: true,\n          errMessage: \"You do no have enough Redeemable Tokens\"\n        });\n      } else {\n        try {\n          let value = inputRedeem * 0.001;\n          value = value.toString();\n          value = web3.utils.toWei(value, \"ether\");\n          await social.methods.redeemNTokens(inputRedeem, value).send({\n            from: useraddress\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance\n    });\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(Array(parseInt(postCount)).fill().map((element, index) => {\n      return social.methods.posts(index).call();\n    }));\n    this.setState({\n      posts: posts,\n      postCount: postCount\n    });\n    this.renderPosts();\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Container, null, __jsx(\"br\", null), __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"50px\"\n      }\n    }, this.state.username), __jsx(\"div\", {\n      style: {\n        backgroundColor: COLORS.divBackground,\n        padding: \"10px\",\n        width: \"500px\",\n        borderRadius: \"20px\",\n        border: \"1px solid\",\n        borderColor: COLORS.menuBackground\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontWeight: \"bold\",\n        fontSize: \"15px\"\n      }\n    }, this.state.useraddress))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Grid, {\n      centered: true\n    }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Total Posts\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.userposts,\n      duration: 5\n    })))), __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Total Tokens Earned\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      start: 0,\n      end: this.state.tokens,\n      duration: 5\n    }), __jsx(\"h1\", null, \"GTok\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.divBackground,\n        color: COLORS.menuBackground,\n        border: \"2px solid\",\n        borderColor: COLORS.menuBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Redeemable Tokens\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.redeemtokens,\n      duration: 5\n    }), __jsx(\"h1\", null, \"GTok\")))), __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"div\", {\n      style: {\n        padding: \"20px\",\n        height: \"100%\",\n        borderRadius: \"50px\",\n        backgroundColor: COLORS.menuBackground,\n        color: COLORS.menuText,\n        border: \"2px solid\",\n        borderColor: COLORS.divBackground\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", {\n      style: {\n        fontSize: \"40px\"\n      }\n    }, \"Account Balance\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(CountUp, {\n      style: {\n        fontSize: \"80px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        margin: \"10px\"\n      },\n      start: 0.0,\n      end: this.state.userbalance,\n      decimals: 4,\n      duration: 5\n    }), __jsx(\"h1\", null, \"ETH\")))))), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"br\", null), __jsx(\"h1\", {\n      style: {\n        color: COLORS.menuBackground\n      }\n    }, \"Redeem Tokens\"), __jsx(\"p\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"15px\"\n      }\n    }, \"(Note: Tokens can be redeemed if tokens are greater than 20)\"), __jsx(Form, null, __jsx(Form.Field, {\n      inline: true,\n      style: {\n        height: \"50px\"\n      }\n    }, __jsx(\"label\", {\n      style: {\n        color: COLORS.menuBackground,\n        fontSize: \"18px\"\n      }\n    }, \"Tokens to redeem:\", \" \"), __jsx(Input, {\n      required: true,\n      focus: true,\n      placeholder: \"No. of Tokens\",\n      style: {\n        fontSize: \"18px\"\n      },\n      onChange: event => this.setState({\n        inputRedeem: event.target.value\n      })\n    }), __jsx(CustButton, {\n      icon: \"money\",\n      content: \"Redeem\",\n      style: {\n        fontSize: \"16px\",\n        color: COLORS.menuText,\n        backgroundColor: COLORS.menuBackground\n      },\n      onClick: () => this.redeemTokens()\n    })), __jsx(Message, {\n      error: true,\n      header: \"Insufficient Tokens!\",\n      visible: this.state.err,\n      content: this.state.errMessage\n    })), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"hr\", null), __jsx(\"h1\", null, \"Your Posts\"), __jsx(\"br\", null), __jsx(Card.Group, {\n      centered: true,\n      items: this.state.items\n    })));\n  }\n\n} // tokens earned and withdrawable tokens\n// 37.4642\n\n\nexport default Profile;","map":{"version":3,"sources":["/home/hrishib/Desktop/Ethegram/pages/profile/index.js"],"names":["React","Component","Form","Button","Input","Image","Message","Grid","Container","Modal","List","Header","Card","Layout","social","web3","ipfs","Router","CountUp","ReactPlayer","COLORS","CustButton","Profile","tokens","username","useraddress","userposts","userbalance","redeemtokens","inputRedeem","err","errMessage","posts","postCount","items","newComment","index","console","log","methods","deletePost","send","from","state","pushRoute","message","accs","eth","getAccounts","str","postComment","setState","caption","Promise","all","map","post","valid","owner","key","name","getUserDetails","call","imgSrc","vidSrc","imgIpfsHash","length","hash","type","slice","header","marginBottom","color","marginTop","timestamp","description","border","margin","fontSize","padding","minHeight","extra","onSubmit","event","target","value","width","height","marginRight","likePost","basic","content","likes","modal","comments","split","marginLeft","hidePost","fluid","toString","utils","toWei","redeemNTokens","componentDidMount","userDetails","userAddress","userBalance","getBalance","fromWei","parseFloat","toFixed","getPostsCount","Array","parseInt","fill","element","renderPosts","render","menuBackground","backgroundColor","divBackground","borderRadius","borderColor","fontWeight","menuText","alignContent","justifyContent","redeemTokens"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Input,\n  Image,\n  Message,\n  Grid,\n  Container,\n  Modal,\n  List,\n  Header,\n  Card,\n} from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport social from \"../../ethereum/social\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Router } from \"../../routes\";\nimport CountUp from \"react-countup\";\nimport ReactPlayer from \"react-player\";\nimport COLORS from \"../../colors\";\nimport { CustButton } from \"../../components/styledComponents\";\n\n\nclass Profile extends Component {\n  state = {\n    tokens: 0,\n    username: \"\",\n    useraddress: \"\",\n    userposts: 0,\n    userbalance: 0.0,\n    redeemtokens: 0,\n    inputRedeem: 0,\n    err: false,\n    errMessage: \"\",\n    posts: [],\n    postCount: 0,\n    items: [],\n    newComment: \"\",\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userDetails = await social.methods.getUserDetails(accs[0]).call();\n    const userAddress = accs[0];\n\n    let userBalance = await web3.eth.getBalance(accs[0]);\n    userBalance = web3.utils.fromWei(userBalance, \"ether\");\n    userBalance = parseFloat(userBalance).toFixed(4);\n    console.log(userBalance);\n\n    this.setState({\n      username: userDetails[0],\n      tokens: userDetails[1],\n      useraddress: userAddress,\n      userposts: userDetails[2],\n      redeemtokens: userDetails[3],\n      userbalance: userBalance,\n    });\n\n    const postCount = await social.methods.getPostsCount().call();\n    const posts = await Promise.all(\n      Array(parseInt(postCount))\n        .fill()\n        .map((element, index) => {\n          return social.methods.posts(index).call();\n        })\n    );\n\n    this.setState({ posts: posts, postCount: postCount });\n    this.renderPosts();\n  }\n\n  hidePost = async (index) => {\n    console.log(index);\n\n    try {\n      await social.methods\n        .deletePost(index)\n        .send({ from: this.state.useraddress });\n      Router.pushRoute(\"/\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  onSubmit = async (index) => {\n    console.log(index);\n    const accs = await web3.eth.getAccounts();\n\n    var str = this.state.username + \": \" + this.state.newComment;\n    console.log(str);\n    try {\n      await social.methods.postComment(index, str).send({ from: accs[0] });\n      console.log(\"Comment Posted by \" + accs[0]);\n      this.setState({ caption: \"\" });\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  renderPosts = async () => {\n    const posts = this.state.posts;\n    console.log(this.state.postCount);\n\n    const items = await Promise.all(\n      posts.map(async (post, index) => {\n        if (!post.valid || post.owner!=this.state.useraddress) {\n          return {\n            key: index,\n          };\n        }\n        const name = await social.methods.getUserDetails(post.owner).call();\n        let imgSrc = null,\n          vidSrc = null;\n        if (post.imgIpfsHash.length > 0) {\n          let hash = post.imgIpfsHash;\n          let type = hash[0];\n          hash = hash.slice(1, hash.length);\n\n          if (type == \"0\") {\n            imgSrc = \"https://ipfs.io/ipfs/\" + hash;\n          } else {\n            vidSrc = \"https://ipfs.io/ipfs/\" + hash;\n          }\n        }\n\n        console.log(post.imgIpfsHash);\n\n        return {\n          key: index,\n          header: (\n            <div>\n              <h4 style={{ marginBottom: \"0px\" }}>{name[0]}</h4>\n              <p style={{ color: \"grey\", marginTop: \"0px\" }}>\n                {post.timestamp}\n              </p>\n              <h3>{post.caption}</h3>\n            </div>\n          ),\n          description: (\n            <div style={{ border: \"2px solid grey\" }}>\n              <p style={{ margin: \"10px\", fontSize: \"15px\" }}>\n                {post.description}\n              </p>\n              <Image\n                style={{ padding: \"20px\" }}\n                hidden={imgSrc == null}\n                src={imgSrc}\n                fluid\n              />\n              <ReactPlayer\n                style={{ padding: \"20px\", minHeight: \"100%\" }}\n                hidden={vidSrc == null}\n                url={vidSrc}\n                controls={true}\n                // light=\"https://www.thejobconnection.org/wp-content/uploads/2019/05/Video-Arrow-overlay.png\"\n                width=\"100%\"\n                height=\"100%\"\n              />\n            </div>\n          ),\n          extra: (\n            <div>\n              <Form onSubmit={() => this.onSubmit(index)}>\n                <Form.Field inline>\n                  <Input\n                    required\n                    focus\n                    placeholder=\"Add a comment...\"\n                    value={this.state.caption}\n                    onChange={(event) =>\n                      this.setState({ newComment: event.target.value })\n                    }\n                    style={{ width: \"70%\", height: \"40px\", marginRight: \"0px\" }}\n                  />\n                  <CustButton\n                    size=\"small\"\n                    color=\"linkedin\"\n                    content=\"Post Comment\"\n                    icon=\"edit\"\n                    style={{ height: \"40px\" }}\n                  />\n                </Form.Field>\n              </Form>\n              <br></br>\n              <CustButton\n                onClick={() => this.likePost(index)}\n                color=\"red\"\n                content=\"Like\"\n                icon=\"heart\"\n                size=\"medium\"\n                label={{ basic: true, color: \"red\", content: post.likes }}\n              />\n              <Modal\n                trigger={\n                  <CustButton\n                    size=\"medium\"\n                    color=\"facebook\"\n                    content=\"View Comments\"\n                    icon=\"comments\"\n                    onClick={() => this.setState({ modal: true })}\n                  />\n                }\n                size=\"small\"\n              >\n                <Header content=\"Comments\" />\n                <Modal.Content>\n                  <List divided items={post.comments.split(\"/\")}></List>\n                </Modal.Content>\n                <Modal.Actions>\n                  <CustButton\n                    color=\"red\"\n                    content=\"Close\"\n                    icon=\"close\"\n                    inverted\n                    onClick={() => this.setState({ modal: false })}\n                  />\n                </Modal.Actions>\n              </Modal>\n              <CustButton\n                style={{ marginLeft: \"auto\" }}\n                content=\"Hide\"\n                color=\"black\"\n                onClick={() => this.hidePost(index)}\n              />\n            </div>\n          ),\n          fluid: true,\n        };\n      })\n    );\n\n    this.setState({ items: items });\n  };\n\n  redeemTokens = async () => {\n    const { inputRedeem, useraddress, redeemtokens } = this.state;\n\n    if (inputRedeem == 0 || inputRedeem > redeemtokens) {\n      this.setState({\n        err: true,\n        errMessage: \"You do no have enough Redeemable Tokens\",\n      });\n    } else {\n      try {\n        let value = inputRedeem * 0.001;\n        value = value.toString();\n        value = web3.utils.toWei(value, \"ether\");\n        await social.methods.redeemNTokens(inputRedeem, value).send({\n          from: useraddress,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <br></br>\n          <center>\n            <h1 style={{ color: COLORS.menuBackground, fontSize: \"50px\" }}>\n              {this.state.username}\n            </h1>\n            <div\n              style={{\n                backgroundColor: COLORS.divBackground,\n                padding: \"10px\",\n                width: \"500px\",\n                borderRadius: \"20px\",\n                border: \"1px solid\",\n                borderColor: COLORS.menuBackground,\n              }}\n            >\n              <p\n                style={{\n                  color: COLORS.menuBackground,\n                  fontWeight: \"bold\",\n                  fontSize: \"15px\",\n                }}\n              >\n                {this.state.useraddress}\n              </p>\n            </div>\n          </center>\n          <br />\n          <br />\n          <hr />\n          <br />\n          <br />\n          <Grid centered>\n            <Grid.Row>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.menuBackground,\n                    color: COLORS.menuText,\n                    border: \"2px solid\",\n                    borderColor: COLORS.divBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Total Posts</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                      start={0}\n                      end={this.state.userposts}\n                      duration={5}\n                    />\n                  </center>\n                </div>\n              </Grid.Column>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.divBackground,\n                    color: COLORS.menuBackground,\n                    border: \"2px solid\",\n                    borderColor: COLORS.menuBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Total Tokens Earned</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                      start={0}\n                      end={this.state.tokens}\n                      duration={5}\n                    />\n                    <h1>GTok</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.divBackground,\n                    color: COLORS.menuBackground,\n                    border: \"2px solid\",\n                    borderColor: COLORS.menuBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Redeemable Tokens</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"10px\",\n                      }}\n                      start={0.0}\n                      end={this.state.redeemtokens}\n                      duration={5}\n                    />\n                    <h1>GTok</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n              <Grid.Column width=\"8\">\n                <div\n                  style={{\n                    padding: \"20px\",\n                    height: \"100%\",\n                    borderRadius: \"50px\",\n                    backgroundColor: COLORS.menuBackground,\n                    color: COLORS.menuText,\n                    border: \"2px solid\",\n                    borderColor: COLORS.divBackground,\n                  }}\n                >\n                  <center>\n                    <h1 style={{ fontSize: \"40px\" }}>Account Balance</h1>\n                    <br />\n                    <br />\n                    <CountUp\n                      style={{\n                        fontSize: \"80px\",\n                        alignContent: \"center\",\n                        justifyContent: \"center\",\n                        margin: \"10px\",\n                      }}\n                      start={0.0}\n                      end={this.state.userbalance}\n                      decimals={4}\n                      duration={5}\n                    />\n                    <h1>ETH</h1>\n                  </center>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <br />\n          <br />\n          <hr />\n          <br />\n\n          <h1 style={{ color: COLORS.menuBackground }}>Redeem Tokens</h1>\n          <p style={{ color: COLORS.menuBackground, fontSize: \"15px\" }}>\n            (Note: Tokens can be redeemed if tokens are greater than 20)\n          </p>\n\n          <Form>\n            <Form.Field inline style={{ height: \"50px\" }}>\n              <label style={{ color: COLORS.menuBackground, fontSize: \"18px\" }}>\n                Tokens to redeem:{\" \"}\n              </label>\n              <Input\n                required\n                focus\n                placeholder=\"No. of Tokens\"\n                style={{ fontSize: \"18px\" }}\n                onChange={(event) =>\n                  this.setState({ inputRedeem: event.target.value })\n                }\n              />\n              <CustButton\n                icon=\"money\"\n                content=\"Redeem\"\n                style={{\n                  fontSize: \"16px\",\n                  color: COLORS.menuText,\n                  backgroundColor: COLORS.menuBackground,\n                }}\n                onClick={() => this.redeemTokens()}\n              />\n            </Form.Field>\n            <Message\n              error\n              header=\"Insufficient Tokens!\"\n              visible={this.state.err}\n              content={this.state.errMessage}\n            />\n          </Form>\n          <br />\n          <br />\n          <hr />\n          <h1>Your Posts</h1>\n          <br />\n          <Card.Group centered items={this.state.items} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n// tokens earned and withdrawable tokens\n// 37.4642\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}